{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "chanleydf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/UserDataPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UserData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UserData",
								"type": "DataFlowReference"
							},
							"integrationRuntime": {
								"referenceName": "TTL10minutesIR",
								"type": "IntegrationRuntimeReference"
							}
						}
					}
				],
				"folder": {
					"name": "Misc"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UserData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UserDataFinal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "registration_dttm",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "nvarchar"
					},
					{
						"name": "last_name",
						"type": "nvarchar"
					},
					{
						"name": "email",
						"type": "nvarchar"
					},
					{
						"name": "gender",
						"type": "nvarchar"
					},
					{
						"name": "ip_address",
						"type": "nvarchar"
					},
					{
						"name": "cc",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "birthdate",
						"type": "nvarchar"
					},
					{
						"name": "salary",
						"type": "float",
						"precision": 15
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "UserData_Final"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/UserData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "dfMisc"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UserData",
								"type": "DatasetReference"
							},
							"name": "UserData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "UserDataFinal",
								"type": "DatasetReference"
							},
							"name": "UserDataSink"
						}
					],
					"transformations": [
						{
							"name": "RegistrationDT"
						},
						{
							"name": "AggregateUser"
						},
						{
							"name": "Upsert"
						}
					],
					"script": "source(output(\n\t\tregistration_dttm as timestamp,\n\t\tid as integer,\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\temail as string,\n\t\tgender as string,\n\t\tip_address as string,\n\t\tcc as string,\n\t\tcountry as string,\n\t\tbirthdate as string,\n\t\tsalary as double,\n\t\ttitle as string,\n\t\tcomments as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'NONE',\n\tformat: 'table') ~> UserData\nUserData derive(registration_dttm = toDate(toString(registration_dttm))) ~> RegistrationDT\nRegistrationDT aggregate(groupBy(ip_address),\n\tregistration_dttm = max(registration_dttm),\n\t\tid = max(id),\n\t\tfirst_name = max(first_name),\n\t\tlast_name = max(last_name),\n\t\temail = max(email),\n\t\tgender = max(gender),\n\t\tcc = max(cc),\n\t\tcountry = max(country),\n\t\tbirthdate = max(birthdate),\n\t\tsalary = max(salary),\n\t\ttitle = max(title),\n\t\tcomments = max(comments)) ~> AggregateUser\nAggregateUser alterRow(upsertIf(true())) ~> Upsert\nUpsert sink(input(\n\t\tregistration_dttm as timestamp,\n\t\tid as integer,\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\temail as string,\n\t\tgender as string,\n\t\tip_address as string,\n\t\tcc as string,\n\t\tcountry as string,\n\t\tbirthdate as string,\n\t\tsalary as double,\n\t\ttitle as string,\n\t\tcomments as string\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tregistration_dttm,\n\t\tid,\n\t\tfirst_name,\n\t\tlast_name,\n\t\temail,\n\t\tgender,\n\t\tip_address,\n\t\tcc,\n\t\tcountry,\n\t\tbirthdate,\n\t\tsalary,\n\t\ttitle,\n\t\tcomments\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UserDataSink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/UserDataFinal')]"
			]
		}
	]
}
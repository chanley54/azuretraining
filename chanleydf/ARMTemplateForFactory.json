{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "chanleydf"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"Names_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Names'"
		},
		"chanley54Synapse_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'chanley54Synapse'"
		},
		"chanleypool_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'chanleypool'"
		},
		"chanleysvc_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'chanleysvc'"
		},
		"databrickslinkedservice_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'databrickslinkedservice'"
		},
		"miscparquest_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'miscparquest'"
		},
		"miscparquest_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://chanleysg.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/upsert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfUpsert",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfUpsert",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcTableA": {},
									"tgtTableB": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfUpsert')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/srcTableA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Upserts"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemName",
						"type": "varchar"
					},
					{
						"name": "ItemSkew",
						"type": "varchar"
					},
					{
						"name": "DatePurchase",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateReturned",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "cost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "DateLoaded",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateUpdated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateDeleted",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "srcTableA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/chanleysvc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tgtTableB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Upserts"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemName",
						"type": "varchar"
					},
					{
						"name": "ItemSkew",
						"type": "varchar"
					},
					{
						"name": "DatePurchase",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateReturned",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "cost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "DateLoaded",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateUpdated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateDeleted",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tgtTableB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/chanleysvc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Names')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Names_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/chanley54Synapse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('chanley54Synapse_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/chanleypool')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('chanleypool_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/chanleysvc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('chanleysvc_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/databrickslinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4430222745813530.10.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('databrickslinkedservice_accessToken')]"
					},
					"existingClusterId": "0530-195028-quack609"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/miscparquest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('miscparquest_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('miscparquest_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TTL10minutesIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"description": "Azure IR with a 10 minute TTL",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfUpsert')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "srcTableA",
								"type": "DatasetReference"
							},
							"name": "srcTableA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tgtTableB",
								"type": "DatasetReference"
							},
							"name": "tgtTableB"
						}
					],
					"transformations": [
						{
							"name": "upsert"
						}
					],
					"script": "source(output(\n\t\tItemName as string,\n\t\tItemSkew as string,\n\t\tDatePurchase as timestamp,\n\t\tDateReturned as timestamp,\n\t\tcost as decimal(19,4)\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select\\nItemName, ItemSkew, DatePurchase, DateReturned, cost\\nfrom\\n [dbo].[srcTableA]',\n\tformat: 'query') ~> srcTableA\nsrcTableA alterRow(upsertIf(true())) ~> upsert\nupsert sink(input(\n\t\tID as integer,\n\t\tItemName as string,\n\t\tItemSkew as string,\n\t\tDatePurchase as timestamp,\n\t\tDateReturned as timestamp,\n\t\tcost as decimal(19,4),\n\t\tDateLoaded as timestamp,\n\t\tDateUpdated as timestamp,\n\t\tDateDeleted as timestamp\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ItemSkew'],\n\tformat: 'table',\n\tmapColumn(\n\t\tItemName,\n\t\tItemSkew,\n\t\tDatePurchase,\n\t\tDateReturned,\n\t\tcost\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> tgtTableB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/srcTableA')]",
				"[concat(variables('factoryId'), '/datasets/tgtTableB')]"
			]
		}
	]
}
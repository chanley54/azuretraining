{
	"name": "Copy from REST connector into ADLS Gen2",
	"properties": {
		"activities": [
			{
				"name": "CopyDataSets",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "GetBearerToken",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"additionalHeaders": {
							"Authorization": {
								"value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
								"type": "Expression"
							}
						}
					},
					"sink": {
						"type": "JsonSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "JsonWriteSettings"
						}
					},
					"enableStaging": false
				},
				"inputs": [
					{
						"referenceName": "RestResource",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SinkDataset",
						"type": "DatasetReference",
						"parameters": {
							"Container": {
								"value": "@pipeline().parameters.SinkContainer",
								"type": "Expression"
							},
							"Directory": {
								"value": "@pipeline().parameters.SinkDirectory",
								"type": "Expression"
							},
							"fileName": {
								"value": "@pipeline().parameters.fileName",
								"type": "Expression"
							}
						}
					}
				]
			},
			{
				"name": "GetBearerToken",
				"description": "Use this Web activity to get bearer token",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://login.microsoftonline.com/cat.onmicrosoft.com/oauth2/token",
					"method": "POST",
					"headers": {
						"Content-Type": "application/x-www-form-urlencoded"
					},
					"body": "grant_type=client_credentials&client_id=b9f7e648-22a2-420c-b7df-a918d60ad785&resource=https://management.azure.com&client_secret=.9aZ_0IA6O_97iRU-es3ww6CzRtO_KON_O&tenant_id=d0659de2-684e-49bd-9b1f-1fd4cd0942d9\n"
				}
			},
			{
				"name": "CopyJsonDataSets",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "CopyDataSets",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobFSReadSettings",
							"recursive": true
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"sink": {
						"type": "DelimitedTextSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings",
							"copyBehavior": "FlattenHierarchy"
						},
						"formatSettings": {
							"type": "DelimitedTextWriteSettings",
							"quoteAllText": true,
							"fileExtension": ".txt"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['id']"
								},
								"sink": {
									"name": "id"
								}
							},
							{
								"source": {
									"path": "['name']"
								},
								"sink": {
									"name": "name"
								}
							},
							{
								"source": {
									"path": "['type']"
								},
								"sink": {
									"name": "type"
								}
							},
							{
								"source": {
									"path": "['properties']['linkedServiceName']['referenceName']"
								},
								"sink": {
									"name": "referenceName"
								}
							},
							{
								"source": {
									"path": "['properties']['linkedServiceName']['type']"
								},
								"sink": {
									"name": "referenceType"
								}
							},
							{
								"source": {
									"path": "['properties']['folder']['name']"
								},
								"sink": {
									"name": "folderName"
								}
							},
							{
								"source": {
									"path": "['properties']['annotations']"
								},
								"sink": {
									"name": "folderAnnotations"
								}
							},
							{
								"source": {
									"path": "['properties']['type']"
								},
								"sink": {
									"name": "folderType"
								}
							},
							{
								"source": {
									"path": "['properties']['schema'][0]['name']"
								},
								"sink": {
									"name": "schemaName"
								}
							},
							{
								"source": {
									"path": "['properties']['schema'][0]['type']"
								},
								"sink": {
									"name": "schemaType"
								}
							},
							{
								"source": {
									"path": "['properties']['schema'][0]['precision']"
								},
								"sink": {
									"name": "schemaPrecision"
								}
							},
							{
								"source": {
									"path": "['properties']['typeProperties']['schema']"
								},
								"sink": {
									"name": "typeSchema"
								}
							},
							{
								"source": {
									"path": "['properties']['typeProperties']['table']"
								},
								"sink": {
									"name": "typeTable"
								}
							},
							{
								"source": {
									"path": "['etag']"
								},
								"sink": {
									"name": "eTag"
								}
							}
						],
						"collectionReference": "$['value']",
						"mapComplexValuesToString": true
					}
				},
				"inputs": [
					{
						"referenceName": "datasetJSON",
						"type": "DatasetReference",
						"parameters": {
							"fileName": {
								"value": "@pipeline().parameters.fileName",
								"type": "Expression"
							},
							"SinkContainer": {
								"value": "@pipeline().parameters.SinkContainer",
								"type": "Expression"
							},
							"SinkDirectory": {
								"value": "@pipeline().parameters.SinkDirectory",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "datasetPIPE",
						"type": "DatasetReference"
					}
				]
			}
		],
		"parameters": {
			"SinkContainer": {
				"type": "string",
				"defaultValue": "chanleyblob"
			},
			"SinkDirectory": {
				"type": "string",
				"defaultValue": "json"
			},
			"fileName": {
				"type": "string",
				"defaultValue": "blah.json"
			}
		},
		"annotations": []
	}
}
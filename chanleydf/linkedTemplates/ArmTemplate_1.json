{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "chanleydf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/src_DateRange')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dMisc"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DATE_KEY",
						"type": "varchar"
					},
					{
						"name": "DateId",
						"type": "bigint",
						"precision": 19
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DateRanges"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tgtTraffic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dMisc"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "traffic2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/traffic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "dMisc"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "parquet",
						"container": "chanleyblob"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "timeperiod",
						"type": "UTF8"
					},
					{
						"name": "flow1",
						"type": "INT32"
					},
					{
						"name": "occupancy1",
						"type": "DOUBLE"
					},
					{
						"name": "speed1",
						"type": "DOUBLE"
					},
					{
						"name": "flow2",
						"type": "INT32"
					},
					{
						"name": "occupancy2",
						"type": "DOUBLE"
					},
					{
						"name": "speed2",
						"type": "DOUBLE"
					},
					{
						"name": "flow3",
						"type": "INT32"
					},
					{
						"name": "occupancy3",
						"type": "DOUBLE"
					},
					{
						"name": "speed3",
						"type": "DOUBLE"
					},
					{
						"name": "flow4",
						"type": "INT32"
					},
					{
						"name": "occupancy4",
						"type": "DOUBLE"
					},
					{
						"name": "speed4",
						"type": "DOUBLE"
					},
					{
						"name": "flow5",
						"type": "INT32"
					},
					{
						"name": "occupancy5",
						"type": "DOUBLE"
					},
					{
						"name": "speed5",
						"type": "DOUBLE"
					},
					{
						"name": "flow6",
						"type": "INT32"
					},
					{
						"name": "occupancy6",
						"type": "DOUBLE"
					},
					{
						"name": "speed6",
						"type": "DOUBLE"
					},
					{
						"name": "flow7",
						"type": "INT32"
					},
					{
						"name": "occupancy7",
						"type": "DOUBLE"
					},
					{
						"name": "speed7",
						"type": "DOUBLE"
					},
					{
						"name": "flow8",
						"type": "INT32"
					},
					{
						"name": "occupancy8",
						"type": "DOUBLE"
					},
					{
						"name": "speed8",
						"type": "DOUBLE"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trafficearchive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "parquet/archive",
						"container": "chanleyblob"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AsBuilt')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "parquet_to_bell",
						"description": " ",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "delete_bell",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "registration_dttm",
											"type": "DateTime"
										},
										"sink": {
											"name": "registration_dttm",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "Int32"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "first_name",
											"type": "String"
										},
										"sink": {
											"name": "first_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "last_name",
											"type": "String"
										},
										"sink": {
											"name": "last_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "gender",
											"type": "String"
										},
										"sink": {
											"name": "gender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ip_address",
											"type": "String"
										},
										"sink": {
											"name": "ip_address",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cc",
											"type": "String"
										},
										"sink": {
											"name": "cc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "country",
											"type": "String"
										},
										"sink": {
											"name": "country",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "birthdate",
											"type": "String"
										},
										"sink": {
											"name": "birthdate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "salary",
											"type": "Double"
										},
										"sink": {
											"name": "salary",
											"type": "Double"
										}
									},
									{
										"source": {
											"name": "title",
											"type": "String"
										},
										"sink": {
											"name": "title",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "comments",
											"type": "String"
										},
										"sink": {
											"name": "comments",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "UserDataParquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BellTarget",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "delete_bell",
						"description": "Delete bell files",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "trunc_user_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "BellTarget",
								"type": "DatasetReference",
								"parameters": {}
							},
							"enableLogging": false,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"wildcardFileName": "*.txt"
							}
						}
					},
					{
						"name": "Ingestbell",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "parquet_to_bell",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.txt",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "BellTarget",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "chanleyds",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "trunc_user_data",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[trunc_userdata]"
						},
						"linkedServiceName": {
							"referenceName": "chanleysvc",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "Misc"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/archivetraffic')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copyuserdata",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFolderPath": "parquet",
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "registration_dttm",
											"type": "DateTime"
										},
										"sink": {
											"name": "registration_dttm",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "id",
											"type": "Int32"
										},
										"sink": {
											"name": "id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "first_name",
											"type": "String"
										},
										"sink": {
											"name": "first_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "last_name",
											"type": "String"
										},
										"sink": {
											"name": "last_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "gender",
											"type": "String"
										},
										"sink": {
											"name": "gender",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ip_address",
											"type": "String"
										},
										"sink": {
											"name": "ip_address",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "cc",
											"type": "String"
										},
										"sink": {
											"name": "cc",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "country",
											"type": "String"
										},
										"sink": {
											"name": "country",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "birthdate",
											"type": "String"
										},
										"sink": {
											"name": "birthdate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "salary",
											"type": "Double"
										},
										"sink": {
											"name": "salary",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "title",
											"type": "String"
										},
										"sink": {
											"name": "title",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "comments",
											"type": "String"
										},
										"sink": {
											"name": "comments",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "pqTraffic",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "UserDataDS",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "copyuserdata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "dsUser",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "pqTraffic",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "deletetraffic",
						"type": "Delete",
						"dependsOn": [
							{
								"activity": "archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "pqTraffic",
								"type": "DatasetReference",
								"parameters": {}
							},
							"logStorageSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "chanleyblob/parquet/archive"
							},
							"enableLogging": true,
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyuserdata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UserDataParquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_chanley54_synapse",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Misc"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pD_Personnel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyPersonnel",
						"description": "SQL Database",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select \ngetdate() as [LFBI_LoadTime],\ngetdate() as [LFBI_Start],\ngetdate() as [LFBI_End],\n1 as [LFBI_Current],\nDate_OF_Birth as create_date, \ncast(Emp_ID as int) as [user_id], \n[First_Name] as first_name, \n[LastName] as last_name, \n[First_Name] + ',' + [LastName] as FullName, \n[User_Name] as login_id, \n[EMail] as email, \n1 as active, \ngetdate() as update_date, \n1 as billable, \n0 as mscrm_system_user_id, \n0 as mscrm_cat_consultant_id, \n0 as mscrm_contact_id, \n165 as contractor_rate, \n1 as contractor_rate_type, \n1234 as user_guid, \nWeight_in_Kgs as bamboo_id, \n'Data' as practice, \n1 as current_manager, \n'0' as xCustom,\n3 as joblevel_rate, \nPhone_No as mobile_phone,\n'0' as [OnPTO]\nfrom dbo.dboEmpSample\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table DW.d_Personnel2",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "LFBI_LoadTime",
											"type": "DateTime"
										},
										"sink": {
											"name": "LFBI_LoadTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LFBI_Start",
											"type": "DateTime"
										},
										"sink": {
											"name": "LFBI_Start",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LFBI_End",
											"type": "DateTime"
										},
										"sink": {
											"name": "LFBI_End",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "LFBI_Current",
											"type": "Int32"
										},
										"sink": {
											"name": "LFBI_Current",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "billable",
											"type": "Int32"
										},
										"sink": {
											"name": "billable",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "active",
											"type": "Int32"
										},
										"sink": {
											"name": "active",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "create_date",
											"type": "DateTime"
										},
										"sink": {
											"name": "create_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "user_id",
											"type": "Int32"
										},
										"sink": {
											"name": "user_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "first_name",
											"type": "String"
										},
										"sink": {
											"name": "first_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "last_name",
											"type": "String"
										},
										"sink": {
											"name": "last_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FullName",
											"type": "String"
										},
										"sink": {
											"name": "FullName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "login_id",
											"type": "String"
										},
										"sink": {
											"name": "login_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String"
										},
										"sink": {
											"name": "email",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "bamboo_id",
											"type": "Double"
										},
										"sink": {
											"name": "bamboo_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "practice",
											"type": "String"
										},
										"sink": {
											"name": "practice",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "current_manager",
											"type": "Int32"
										},
										"sink": {
											"name": "current_manager",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "joblevel_rate",
											"type": "Int32"
										},
										"sink": {
											"name": "joblevel_rate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "mobile_phone",
											"type": "String"
										},
										"sink": {
											"name": "Mobile_Phone",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "OnPTO",
											"type": "String"
										},
										"sink": {
											"name": "OnPTO",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "xCustom",
											"type": "String"
										},
										"sink": {
											"name": "xCustom",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "dsUser",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "etlPersonnel",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "UpsertPersonnel",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyPersonnel",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select\t\t\t\t \nmax(LFBI_LoadTime)\t\tas\tLFBI_LoadTime,\nmax(LFBI_Start)\t\tas\tLFBI_Start, \nmax(LFBI_End)\t\tas\tLFBI_End, \nLFBI_Current\t\tas\tLFBI_Current, \nbillable \t\tas\tbillable, \nactive \t\tas\tactive, \nmax(create_date)\t\tas\tcreate_date, \n[user_id] \t\tas\tuser_id, \nmax(first_name)\t\tas\tfirst_name, \nmax(last_name)\t\tas\tlast_name, \nmax(FullName)\t\tas\tFullName, \nmax(login_id)\t\tas\tlogin_id, \nmax(email)\t\tas\temail, \nmax(bamboo_id)\t\tas\tbamboo_id, \nmax(practice)\t\tas\tpractice, \nmax(current_manager)\t\tas\tcurrent_manager, \nmax(joblevel_rate)\t\tas\tjoblevel_rate, \nmax(Mobile_Phone)\t\tas\tMobile_Phone, \nOnPTO\t\tas\tOnPTO, \nmax(xCustom)\t\tas\txCustom\nfrom\n[DW].[d_Personnel2]\ngroup by\nbillable,\nactive,\n[user_id],\nLFBI_Current,\nOnPTO",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from [DW].[d_Personnel3]\nwhere \ncast(billable as char(1)) + '~' + cast(active as char(1)) + '~' + cast([user_id] as varchar(75)) + '~' + cast(LFBI_Current as char(1)) + '~' + cast(OnPTO as char(1))\n\nin (\nSelect\ncast(billable as char(1)) + '~' + cast(active as char(1)) + '~' + cast([user_id] as varchar(75)) + '~' + cast(LFBI_Current as char(1)) + '~' + cast(OnPTO as char(1))\nfrom\n[DW].[d_Personnel2]\n)",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "d_Personnel",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "d_Personnel",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/plUserDataToSynapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {},
								"tableOption": "autoCreate"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "UserDataParquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_chanley54_synapse",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Misc"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_df_d_Personnel')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "dfMGS"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "bUser",
								"type": "DatasetReference"
							},
							"name": "sUserData",
							"description": "This is the description sections.  This is a parquet data source."
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "d_Personnel",
								"type": "DatasetReference"
							},
							"name": "dPersonnel"
						}
					],
					"transformations": [
						{
							"name": "SelectUserData"
						},
						{
							"name": "AggrUserData"
						},
						{
							"name": "Upsert"
						}
					],
					"script": "source(output(\n\t\tcreate_date as timestamp,\n\t\tuser_id as string,\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\tFullName as string,\n\t\tlogin_id as string,\n\t\temail as string,\n\t\tactive as integer,\n\t\tupdate_date as timestamp,\n\t\tbillable as integer,\n\t\tmscrm_system_user_id as integer,\n\t\tmscrm_cat_consultant_id as integer,\n\t\tmscrm_contact_id as integer,\n\t\tcontractor_rate as integer,\n\t\tcontractor_rate_type as integer,\n\t\tuser_guid as integer,\n\t\tbamboo_id as double,\n\t\tpractice as string,\n\t\tcurrent_manager as integer,\n\t\txCustom as string,\n\t\tjoblevel_rate as integer,\n\t\tmobile_phone as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> sUserData\nsUserData select(mapColumn(\n\t\tcreate_date,\n\t\tuser_id,\n\t\tfirst_name,\n\t\tlast_name,\n\t\tFullName,\n\t\tlogin_id,\n\t\temail,\n\t\tactive,\n\t\tupdate_date,\n\t\tbillable,\n\t\tmscrm_system_user_id,\n\t\tmscrm_cat_consultant_id,\n\t\tmscrm_contact_id,\n\t\tcontractor_rate,\n\t\tcontractor_rate_type,\n\t\tuser_guid,\n\t\tbamboo_id,\n\t\tpractice,\n\t\tcurrent_manager,\n\t\txCustom,\n\t\tmobile_phone,\n\t\tjoblevel_rate\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> SelectUserData\nSelectUserData aggregate(groupBy(billable,\n\t\tactive,\n\t\tuser_id),\n\tcreate_date = max(create_date),\n\t\tfirst_name = max(first_name),\n\t\tlast_name = max(last_name),\n\t\tFullName = max(FullName),\n\t\tlogin_id = max(login_id),\n\t\temail = max(email),\n\t\tbamboo_id = max(bamboo_id),\n\t\tpractice = max(practice),\n\t\tcurrent_manager = max(current_manager),\n\t\tjoblevel_rate = max(joblevel_rate),\n\t\tmobile_phone = max(mobile_phone),\n\t\txCustom = max(xCustom)) ~> AggrUserData\nAggrUserData alterRow(upsertIf(true())) ~> Upsert\nUpsert sink(input(\n\t\tLFBI_ID as integer,\n\t\tLFBI_LoadTime as timestamp,\n\t\tLFBI_Start as timestamp,\n\t\tLFBI_End as timestamp,\n\t\tLFBI_Current as boolean,\n\t\tbillable as boolean,\n\t\tactive as boolean,\n\t\tcreate_date as timestamp,\n\t\tuser_id as integer,\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\tFullName as string,\n\t\tlogin_id as string,\n\t\temail as string,\n\t\tbamboo_id as integer,\n\t\tpractice as string,\n\t\tcurrent_manager as integer,\n\t\tjoblevel_rate as decimal(19,4),\n\t\tMobile_Phone as string,\n\t\tOnPTO as boolean,\n\t\txCustom as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['Mobile_Phone'],\n\tformat: 'table',\n\tmapColumn(\n\t\tLFBI_LoadTime = create_date,\n\t\tLFBI_Current = create_date,\n\t\tLFBI_Start = create_date,\n\t\tLFBI_End = create_date,\n\t\tbillable,\n\t\tactive,\n\t\tcreate_date,\n\t\tfirst_name,\n\t\tlast_name,\n\t\tFullName,\n\t\tlogin_id,\n\t\temail,\n\t\tbamboo_id,\n\t\tpractice,\n\t\tcurrent_manager,\n\t\tjoblevel_rate,\n\t\tMobile_Phone = mobile_phone,\n\t\txCustom\n\t)) ~> dPersonnel"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SchemaDrift')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "dfMisc"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "srcTraffic",
								"type": "DatasetReference"
							},
							"name": "srcTraffic"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tgtTraffic",
								"type": "DatasetReference"
							},
							"name": "tgtTraffic"
						}
					],
					"transformations": [],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinferDriftedColumnTypes: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> srcTraffic\nsrcTraffic sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> tgtTraffic"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/tgtTraffic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UserData')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "dfMisc"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "UserDataParquet",
								"type": "DatasetReference"
							},
							"name": "UserData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "UserDataParquet",
								"type": "DatasetReference"
							},
							"name": "UserDataSink"
						}
					],
					"transformations": [
						{
							"name": "RegistrationDT"
						}
					],
					"script": "source(output(\n\t\tregistration_dttm as timestamp,\n\t\tid as integer,\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\temail as string,\n\t\tgender as string,\n\t\tip_address as string,\n\t\tcc as string,\n\t\tcountry as string,\n\t\tbirthdate as string,\n\t\tsalary as double,\n\t\ttitle as string,\n\t\tcomments as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 100,\n\tformat: 'parquet') ~> UserData\nUserData derive(registrationDT = toDate(toString(registration_dttm))) ~> RegistrationDT\nRegistrationDT sink(input(\n\t\tregistration_dttm as timestamp,\n\t\tid as integer,\n\t\tfirst_name as string,\n\t\tlast_name as string,\n\t\temail as string,\n\t\tgender as string,\n\t\tip_address as string,\n\t\tcc as string,\n\t\tcountry as string,\n\t\tbirthdate as string,\n\t\tsalary as double,\n\t\ttitle as string,\n\t\tcomments as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tmapColumn(\n\t\tregistration_dttm = registrationDT,\n\t\tid,\n\t\tfirst_name,\n\t\tlast_name,\n\t\temail,\n\t\tgender,\n\t\tip_address,\n\t\tcc,\n\t\tcountry,\n\t\tbirthdate,\n\t\tsalary,\n\t\ttitle,\n\t\tcomments\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UserDataSink"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/3_pl_d_Personnel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Add a Union ALL to pickup unknown record",
				"activities": [
					{
						"name": "CopyUserData",
						"description": "SQL Database",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select \nDate_OF_Birth as create_date, \n[User_Name] as [user_id], \n[First_Name] as first_name, \n[LastName] as last_name, \n[First_Name] + ',' + [LastName] as FullName, \n[User_Name] as login_id, \n[EMail] as email, \n1 as active, \ngetdate() as update_date, \n1 as billable, \n0 as mscrm_system_user_id, \n0 as mscrm_cat_consultant_id, \n0 as mscrm_contact_id, \n165 as contractor_rate, \n1 as contractor_rate_type, \n1234 as user_guid, \nWeight_in_Kgs as bamboo_id, \n'Data' as practice, \n1 as current_manager, \n'0' as xCustom,\n3 as joblevel_rate, \nPhone_No as mobile_phone\nfrom dbo.dboEmpSample\n",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "dsUser",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "bUser",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "dfUserData",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "CopyUserData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "3_df_d_Personnel",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sUserData": {},
									"dPersonnel": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "pMGS"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/3_df_d_Personnel')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UserDataPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "UserData",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "UserData",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"UserData": {},
									"UserDataSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "Misc"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/UserData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_SchemaDrift')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SchemaDrift",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "SchemaDrift",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcTraffic": {},
									"tgtTraffic": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "Misc"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/SchemaDrift')]"
			]
		}
	]
}
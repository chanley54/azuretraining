{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "chanleydf"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"Names_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Names'"
		},
		"chanley54Synapse_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'chanley54Synapse'"
		},
		"chanleypool_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'chanleypool'"
		},
		"chanleysvc_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'chanleysvc'"
		},
		"databrickslinkedservice_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'databrickslinkedservice'"
		},
		"jsonstorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'jsonstorage'"
		},
		"miscparquest_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'miscparquest'"
		},
		"jsonstorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://chanleysg.dfs.core.windows.net"
		},
		"miscparquest_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://chanleysg.dfs.core.windows.net"
		},
		"rest_data_sets_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://management.azure.com"
		},
		"rest_data_sets_properties_typeProperties_aadResourceId": {
			"type": "string",
			"defaultValue": "https://management.azure.com"
		},
		"EventTrigger_properties_Trigger_parameters_SourceFile": {
			"type": "string",
			"defaultValue": "@triggerBody().filename"
		},
		"EventTrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/a192e78c-6b15-4954-b587-3cce7c28eb26/resourceGroups/chanley_rg/providers/Microsoft.Storage/storageAccounts/chanleysg"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Branching')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestResource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "copyActJSON",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Aladdin"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource')]",
				"[concat(variables('factoryId'), '/datasets/copyActJSON')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy from REST connector into ADLS Gen2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataSets",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetBearerToken",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Authorization": {
										"value": "@concat('Bearer ',activity('GetBearerToken').output.access_token)",
										"type": "Expression"
									}
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestResource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "SinkDataset",
								"type": "DatasetReference",
								"parameters": {
									"Container": {
										"value": "@pipeline().parameters.SinkContainer",
										"type": "Expression"
									},
									"Directory": {
										"value": "@pipeline().parameters.SinkDirectory",
										"type": "Expression"
									},
									"fileName": {
										"value": "@pipeline().parameters.fileName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "GetBearerToken",
						"description": "Use this Web activity to get bearer token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://login.microsoftonline.com/cat.onmicrosoft.com/oauth2/token",
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": "grant_type=client_credentials&client_id=b9f7e648-22a2-420c-b7df-a918d60ad785&resource=https://management.azure.com&client_secret=.9aZ_0IA6O_97iRU-es3ww6CzRtO_KON_O&tenant_id=d0659de2-684e-49bd-9b1f-1fd4cd0942d9\n"
						}
					},
					{
						"name": "CopyJsonDataSets",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataSets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['linkedServiceName']['referenceName']"
										},
										"sink": {
											"name": "referenceName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['linkedServiceName']['type']"
										},
										"sink": {
											"name": "referenceType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['folder']['name']"
										},
										"sink": {
											"name": "folderName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['annotations']"
										},
										"sink": {
											"name": "folderAnnotations",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['type']"
										},
										"sink": {
											"name": "folderType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['schema'][0]['name']"
										},
										"sink": {
											"name": "schemaName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['schema'][0]['type']"
										},
										"sink": {
											"name": "schemaType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['schema'][0]['precision']"
										},
										"sink": {
											"name": "schemaPrecision",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['typeProperties']['schema']"
										},
										"sink": {
											"name": "typeSchema",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['typeProperties']['table']"
										},
										"sink": {
											"name": "typeTable",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['etag']"
										},
										"sink": {
											"name": "eTag",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "datasetJSON",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@pipeline().parameters.fileName",
										"type": "Expression"
									},
									"SinkContainer": {
										"value": "@pipeline().parameters.SinkContainer",
										"type": "Expression"
									},
									"SinkDirectory": {
										"value": "@pipeline().parameters.SinkDirectory",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "datasetPIPE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "SQLDataSets",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyJsonDataSets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "datasetPIPE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADF_DataSets",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"SinkContainer": {
						"type": "string",
						"defaultValue": "chanleyblob"
					},
					"SinkDirectory": {
						"type": "string",
						"defaultValue": "json"
					},
					"fileName": {
						"type": "string",
						"defaultValue": "blah.json"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestResource')]",
				"[concat(variables('factoryId'), '/datasets/SinkDataset')]",
				"[concat(variables('factoryId'), '/datasets/datasetJSON')]",
				"[concat(variables('factoryId'), '/datasets/datasetPIPE')]",
				"[concat(variables('factoryId'), '/datasets/ADF_DataSets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyActivities')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copyActivitiesJSON",
						"description": " ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['activityRunEnd']"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "[['activityName']"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "[['activityRunStart']"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "[['activityType']"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "[['durationInMs']"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "[['retryAttempt']"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "[['error']['errorCode']"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "[['error']['message']"
										},
										"sink": {
											"type": "String",
											"ordinal": 8
										}
									},
									{
										"source": {
											"path": "[['error']['failureType']"
										},
										"sink": {
											"type": "String",
											"ordinal": 9
										}
									},
									{
										"source": {
											"path": "[['error']['target']"
										},
										"sink": {
											"ordinal": 10
										}
									},
									{
										"source": {
											"path": "[['error']['details']"
										},
										"sink": {
											"type": "String",
											"ordinal": 11
										}
									},
									{
										"source": {
											"path": "[['activityRunId']"
										},
										"sink": {
											"type": "String",
											"ordinal": 12
										}
									},
									{
										"source": {
											"path": "[['iterationHash']"
										},
										"sink": {
											"type": "String",
											"ordinal": 13
										}
									},
									{
										"source": {
											"path": "[['input']['source']['type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 14
										}
									},
									{
										"source": {
											"path": "[['input']['source']['sqlReaderQuery']"
										},
										"sink": {
											"type": "String",
											"ordinal": 15
										}
									},
									{
										"source": {
											"path": "[['input']['source']['queryTimeout']"
										},
										"sink": {
											"type": "String",
											"ordinal": 16
										}
									},
									{
										"source": {
											"path": "[['input']['source']['partitionOption']"
										},
										"sink": {
											"type": "String",
											"ordinal": 17
										}
									},
									{
										"source": {
											"path": "[['input']['dataset']['referenceName']"
										},
										"sink": {
											"type": "String",
											"ordinal": 18
										}
									},
									{
										"source": {
											"path": "[['input']['dataset']['type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 19
										}
									},
									{
										"source": {
											"path": "[['input']['dataset']['parameters']"
										},
										"sink": {
											"type": "String",
											"ordinal": 20
										}
									},
									{
										"source": {
											"path": "[['input']['firstRowOnly']"
										},
										"sink": {
											"type": "String",
											"ordinal": 21
										}
									},
									{
										"source": {
											"path": "[['linkedServiceName']"
										},
										"sink": {
											"type": "String",
											"ordinal": 22
										}
									},
									{
										"source": {
											"path": "[['output']['count']"
										},
										"sink": {
											"type": "String",
											"ordinal": 23
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['server_name']"
										},
										"sink": {
											"type": "String",
											"ordinal": 24
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['adhoc']"
										},
										"sink": {
											"type": "String",
											"ordinal": 25
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['load_frequency']"
										},
										"sink": {
											"type": "String",
											"ordinal": 26
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['src_type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 27
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['src_schema']"
										},
										"sink": {
											"type": "String",
											"ordinal": 28
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['src_db']"
										},
										"sink": {
											"type": "String",
											"ordinal": 29
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['src_name']"
										},
										"sink": {
											"type": "String",
											"ordinal": 30
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['dst_type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 31
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['dst_name']"
										},
										"sink": {
											"type": "String",
											"ordinal": 32
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['include_pipeline_flag']"
										},
										"sink": {
											"type": "String",
											"ordinal": 33
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['process_type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 34
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['priority_lane']"
										},
										"sink": {
											"type": "String",
											"ordinal": 35
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['pipeline_date']"
										},
										"sink": {
											"type": "String",
											"ordinal": 36
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['pipeline_status']"
										},
										"sink": {
											"type": "String",
											"ordinal": 37
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['dst_folder']"
										},
										"sink": {
											"type": "String",
											"ordinal": 38
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['file_type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 39
										}
									},
									{
										"source": {
											"path": "[['output']['value'][0]['last_modified_folder_date']"
										},
										"sink": {
											"type": "String",
											"ordinal": 40
										}
									},
									{
										"source": {
											"path": "[['output']['effectiveIntegrationRuntime']"
										},
										"sink": {
											"type": "String",
											"ordinal": 41
										}
									},
									{
										"source": {
											"path": "[['output']['billingReference']['activityType']"
										},
										"sink": {
											"type": "String",
											"ordinal": 42
										}
									},
									{
										"source": {
											"path": "[['output']['billingReference']['billableDuration'][0]['meterType']"
										},
										"sink": {
											"type": "String",
											"ordinal": 43
										}
									},
									{
										"source": {
											"path": "[['output']['billingReference']['billableDuration'][0]['duration']"
										},
										"sink": {
											"type": "String",
											"ordinal": 44
										}
									},
									{
										"source": {
											"path": "[['output']['billingReference']['billableDuration'][0]['unit']"
										},
										"sink": {
											"type": "String",
											"ordinal": 45
										}
									},
									{
										"source": {
											"path": "[['output']['durationInQueue']['integrationRuntimeQueue']"
										},
										"sink": {
											"type": "String",
											"ordinal": 46
										}
									},
									{
										"source": {
											"path": "[['userProperties']"
										},
										"sink": {
											"type": "String",
											"ordinal": 47
										}
									},
									{
										"source": {
											"path": "[['pipelineName']"
										},
										"sink": {
											"type": "String",
											"ordinal": 48
										}
									},
									{
										"source": {
											"path": "[['pipelineRunId']"
										},
										"sink": {
											"type": "String",
											"ordinal": 49
										}
									},
									{
										"source": {
											"path": "[['status']"
										},
										"sink": {
											"type": "String",
											"ordinal": 50
										}
									},
									{
										"source": {
											"path": "[['recoveryStatus']"
										},
										"sink": {
											"type": "String",
											"ordinal": 51
										}
									},
									{
										"source": {
											"path": "[['integrationRuntimeNames']"
										},
										"sink": {
											"type": "String",
											"ordinal": 52
										}
									},
									{
										"source": {
											"path": "[['executionDetails']['integrationRuntime'][0]['name']"
										},
										"sink": {
											"type": "String",
											"ordinal": 53
										}
									},
									{
										"source": {
											"path": "[['executionDetails']['integrationRuntime'][0]['type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 54
										}
									},
									{
										"source": {
											"path": "[['executionDetails']['integrationRuntime'][0]['location']"
										},
										"sink": {
											"type": "String",
											"ordinal": 55
										}
									},
									{
										"source": {
											"path": "[['executionDetails']['integrationRuntime'][0]['nodes']"
										},
										"sink": {
											"type": "String",
											"ordinal": 56
										}
									},
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"type": "String",
											"ordinal": 57
										}
									},
									{
										"source": {
											"path": "$['continuationToken']"
										},
										"sink": {
											"type": "String",
											"ordinal": 58
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "activitiesJSAON",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "activitiesPIPE",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "copyActivitiesPIPE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "copyActivitiesJSON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "truncate table [adf].[ADF_ACTIVITES]",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "Column1",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "Column2",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "Column3",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "Column4",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 5
										},
										"sink": {
											"name": "Column5",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 6
										},
										"sink": {
											"name": "Column6",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 7
										},
										"sink": {
											"name": "Column7",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 8
										},
										"sink": {
											"name": "Column8",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 9
										},
										"sink": {
											"name": "Column9",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 10
										},
										"sink": {
											"name": "Column10",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 11
										},
										"sink": {
											"name": "Column11",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 12
										},
										"sink": {
											"name": "Column12",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 13
										},
										"sink": {
											"name": "Column13",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 14
										},
										"sink": {
											"name": "Column14",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 15
										},
										"sink": {
											"name": "Column15",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 16
										},
										"sink": {
											"name": "Column16",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 17
										},
										"sink": {
											"name": "Column17",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 18
										},
										"sink": {
											"name": "Column18",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 19
										},
										"sink": {
											"name": "Column19",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 20
										},
										"sink": {
											"name": "Column20",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 21
										},
										"sink": {
											"name": "Column21",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 22
										},
										"sink": {
											"name": "Column22",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 23
										},
										"sink": {
											"name": "Column23",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 24
										},
										"sink": {
											"name": "Column24",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 25
										},
										"sink": {
											"name": "Column25",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 26
										},
										"sink": {
											"name": "Column26",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 27
										},
										"sink": {
											"name": "Column27",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 28
										},
										"sink": {
											"name": "Column28",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 29
										},
										"sink": {
											"name": "Column29",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 30
										},
										"sink": {
											"name": "Column30",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 31
										},
										"sink": {
											"name": "Column31",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 32
										},
										"sink": {
											"name": "Column32",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 33
										},
										"sink": {
											"name": "Column33",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 34
										},
										"sink": {
											"name": "Column34",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 35
										},
										"sink": {
											"name": "Column35",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 36
										},
										"sink": {
											"name": "Column36",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 37
										},
										"sink": {
											"name": "Column37",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 38
										},
										"sink": {
											"name": "Column38",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 39
										},
										"sink": {
											"name": "Column39",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 40
										},
										"sink": {
											"name": "Column40",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 41
										},
										"sink": {
											"name": "Column41",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 42
										},
										"sink": {
											"name": "Column42",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 43
										},
										"sink": {
											"name": "Column43",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 44
										},
										"sink": {
											"name": "Column44",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 45
										},
										"sink": {
											"name": "Column45",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 46
										},
										"sink": {
											"name": "Column46",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 47
										},
										"sink": {
											"name": "Column47",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 48
										},
										"sink": {
											"name": "Column48",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 49
										},
										"sink": {
											"name": "Column49",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 50
										},
										"sink": {
											"name": "Column50",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 51
										},
										"sink": {
											"name": "Column51",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 52
										},
										"sink": {
											"name": "Column52",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 53
										},
										"sink": {
											"name": "Column53",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 54
										},
										"sink": {
											"name": "Column54",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 55
										},
										"sink": {
											"name": "Column55",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 56
										},
										"sink": {
											"name": "Column56",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 57
										},
										"sink": {
											"name": "Column57",
											"type": "String"
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 58
										},
										"sink": {
											"name": "Column58",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "activitiesPIPE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADF_ACTIVITIES",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ADF"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/activitiesJSAON')]",
				"[concat(variables('factoryId'), '/datasets/activitiesPIPE')]",
				"[concat(variables('factoryId'), '/datasets/ADF_ACTIVITIES')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyDatasets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['linkedServiceName']['referenceName']"
										},
										"sink": {
											"name": "LS_referenceName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['linkedServiceName']['type']"
										},
										"sink": {
											"name": "LS_type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['folder']['name']"
										},
										"sink": {
											"name": "folder_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['type']"
										},
										"sink": {
											"name": "folder_type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['typeProperties']['location']['type']"
										},
										"sink": {
											"name": "location_type"
										}
									},
									{
										"source": {
											"path": "[['properties']['typeProperties']['location']['fileName']"
										},
										"sink": {
											"name": "fileName"
										}
									},
									{
										"source": {
											"path": "[['properties']['typeProperties']['location']['folderPath']"
										},
										"sink": {
											"name": "folderPath"
										}
									},
									{
										"source": {
											"path": "[['properties']['typeProperties']['location']['fileSystem']"
										},
										"sink": {
											"name": "fileSystem"
										}
									},
									{
										"source": {
											"path": "[['properties']['typeProperties']['compressionCodec']"
										},
										"sink": {
											"name": "compressionCodec"
										}
									},
									{
										"source": {
											"path": "[['properties']['schema'][0]['name']"
										},
										"sink": {
											"name": "schema_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['schema'][0]['type']"
										},
										"sink": {
											"name": "schema_type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['etag']"
										},
										"sink": {
											"name": "etag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nextLink']"
										},
										"sink": {
											"name": "nextLink",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LS_referenceName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LS_referenceName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "LS_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "LS_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "folder_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "folder_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "folder_items",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "folder_items",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "folder_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "folder_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "location_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "location_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "fileName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fileName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "folderPath",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "folderPath",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "fileSystem",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "fileSystem",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "compressionCodec",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "compressionCodec",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "schema_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "schema_name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "schema_type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "schema_type",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "etag",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "etag",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "nextLink",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "nextLink",
											"type": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "CTH_Dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "ADF"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]",
				"[concat(variables('factoryId'), '/datasets/CTH_Dataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DynamicMapping')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dynamicMapping",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup_name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@json(activity('Lookup_name').output.firstRow.json_output)",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "datasetnames",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "boohoo",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Lookup_name",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[adf].[pc_getColumnMapping]",
								"storedProcedureParameters": {
									"schema_name": {
										"type": "String",
										"value": "adf"
									},
									"table_name": {
										"type": "String",
										"value": "datasetnames"
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "src_chanley",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"folder": {
					"name": "ADF"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datasetnames')]",
				"[concat(variables('factoryId'), '/datasets/boohoo')]",
				"[concat(variables('factoryId'), '/datasets/src_chanley')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Loop_param')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "\nselect \nItemName + 'xxx' as Item from\n[dbo].[srcTableA]\nwhere cost > @{pipeline().parameters.cost}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"isolationLevel": "ReadUncommitted",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "srcTableA",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Stored procedure1",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[insert_B]",
										"storedProcedureParameters": {
											"item": {
												"value": {
													"value": "@{item().Item}",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "chanleysvc",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"parameters": {
					"cost": {
						"type": "int",
						"defaultValue": 20
					}
				},
				"folder": {
					"name": "chanley"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/srcTableA')]",
				"[concat(variables('factoryId'), '/linkedServices/chanleysvc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"description": "   ",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "srcTrigger",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@pipeline().parameters.SourceFile",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "tgtTrigger",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"SourceFile": {
						"type": "string",
						"defaultValue": "@trigger().outputs.body.fileName"
					}
				},
				"folder": {
					"name": "chanley"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/srcTrigger')]",
				"[concat(variables('factoryId'), '/datasets/tgtTrigger')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['name']"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['dependsOn']"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['policy']['timeout']"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['policy']['retry']"
										},
										"sink": {
											"type": "String",
											"ordinal": 8
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['policy']['retryIntervalInSeconds']"
										},
										"sink": {
											"type": "String",
											"ordinal": 9
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['policy']['secureOutput']"
										},
										"sink": {
											"type": "String",
											"ordinal": 10
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['policy']['secureInput']"
										},
										"sink": {
											"type": "String",
											"ordinal": 11
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['userProperties']"
										},
										"sink": {
											"type": "String",
											"ordinal": 12
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['typeProperties']['dataflow']['referenceName']"
										},
										"sink": {
											"type": "String",
											"ordinal": 13
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['typeProperties']['dataflow']['type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 14
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['typeProperties']['dataflow']['parameters']"
										},
										"sink": {
											"type": "String",
											"ordinal": 15
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['typeProperties']['dataflow']['datasetParameters']['srcTableA']"
										},
										"sink": {
											"type": "String",
											"ordinal": 16
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['typeProperties']['dataflow']['datasetParameters']['tgtTableB']"
										},
										"sink": {
											"type": "String",
											"ordinal": 17
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['typeProperties']['staging']"
										},
										"sink": {
											"type": "String",
											"ordinal": 18
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['typeProperties']['integrationRuntime']['referenceName']"
										},
										"sink": {
											"type": "String",
											"ordinal": 19
										}
									},
									{
										"source": {
											"path": "[['properties']['activities'][0]['typeProperties']['integrationRuntime']['type']"
										},
										"sink": {
											"type": "String",
											"ordinal": 20
										}
									},
									{
										"source": {
											"path": "[['properties']['folder']['name']"
										},
										"sink": {
											"type": "String",
											"ordinal": 21
										}
									},
									{
										"source": {
											"path": "[['properties']['annotations']"
										},
										"sink": {
											"type": "String",
											"ordinal": 22
										}
									},
									{
										"source": {
											"path": "[['properties']['lastPublishTime']"
										},
										"sink": {
											"type": "String",
											"ordinal": 23
										}
									},
									{
										"source": {
											"path": "[['etag']"
										},
										"sink": {
											"type": "String",
											"ordinal": 24
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "jsonpipeline",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "chanley"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/jsonpipeline')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/call_DS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "datasets",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "datasets",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcDS": {},
									"sink1": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "TTL10minutesIR",
								"type": "IntegrationRuntimeReference"
							}
						}
					}
				],
				"folder": {
					"name": "ADF"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/datasets')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/TTL10minutesIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/child_param')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "insert_B",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[insert_B]",
							"storedProcedureParameters": {
								"item": {
									"value": {
										"value": "@pipeline().parameters.item",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "chanleysvc",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"item": {
						"type": "string",
						"defaultValue": "@pipeline().parameters.item"
					}
				},
				"folder": {
					"name": "chanley"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/chanleysvc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parent_loop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_loop",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Loop_param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"cost": {
									"value": "@pipeline().parameters.cost",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"cost": {
						"type": "int",
						"defaultValue": 1
					}
				},
				"folder": {
					"name": "chanley"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Loop_param')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/parent_param')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute Pipeline1",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "child_param",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"item": {
									"value": "@pipeline().parameters.item2",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"item2": {
						"type": "string",
						"defaultValue": "Chris"
					}
				},
				"folder": {
					"name": "chanley"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/child_param')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_SKU')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select  \n[ItemName],\n[ItemSkew],\n12 as cost\nfrom [dbo].[srcTableA]\nwhere ItemName = 'Comic2'",
								"queryTimeout": "02:00:00",
								"isolationLevel": "ReadUncommitted",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemSkew",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemSkew",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "cost",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "cost",
											"type": "Decimal",
											"physicalType": "money"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "srcSKU",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "tgtSKU",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "chanley"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/srcSKU')]",
				"[concat(variables('factoryId'), '/datasets/tgtSKU')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/upsert')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dfUpsert",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dfUpsert",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"srcTableA": {},
									"tgtTableB": {}
								}
							},
							"staging": {},
							"integrationRuntime": {
								"referenceName": "IR30Minutes",
								"type": "IntegrationRuntimeReference"
							}
						}
					}
				],
				"folder": {
					"name": "chanley"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dfUpsert')]",
				"[concat(variables('factoryId'), '/integrationRuntimes/IR30Minutes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_ACTIVITIES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "misc"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "adf",
					"table": "ADF_ACTIVITES"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/chanleysvc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_DataSets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "misc"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "nvarchar"
					},
					{
						"name": "name",
						"type": "nvarchar"
					},
					{
						"name": "type",
						"type": "nvarchar"
					},
					{
						"name": "referenceName",
						"type": "nvarchar"
					},
					{
						"name": "referenceType",
						"type": "nvarchar"
					},
					{
						"name": "folderName",
						"type": "nvarchar"
					},
					{
						"name": "folderAnnotations",
						"type": "nvarchar"
					},
					{
						"name": "folderType",
						"type": "nvarchar"
					},
					{
						"name": "schemaName",
						"type": "nvarchar"
					},
					{
						"name": "schemaType",
						"type": "nvarchar"
					},
					{
						"name": "schemaPrecision",
						"type": "nvarchar"
					},
					{
						"name": "typeSchema",
						"type": "nvarchar"
					},
					{
						"name": "typeTable",
						"type": "nvarchar"
					},
					{
						"name": "eTag",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "adf",
					"table": "ADF_DATA_SETS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/chanleysvc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CTH_Dataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "adf",
					"table": "CTH_Dataset"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/chanleysvc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "miscparquest",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "misc"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "blah.csv",
						"folderPath": "json",
						"fileSystem": "chanleyblob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/miscparquest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "jsonstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "datasetpipe.txt",
						"folderPath": "json",
						"fileSystem": "chanleyblob"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/jsonstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "jsonstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "DataSets.json",
						"folderPath": "json",
						"fileSystem": "chanleyblob"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"value": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"type": {
										"type": "string"
									},
									"properties": {
										"type": "object",
										"properties": {
											"linkedServiceName": {
												"type": "object",
												"properties": {
													"referenceName": {
														"type": "string"
													},
													"type": {
														"type": "string"
													}
												}
											},
											"folder": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string"
													}
												}
											},
											"annotations": {
												"type": "array"
											},
											"type": {
												"type": "string"
											},
											"typeProperties": {
												"type": "object",
												"properties": {
													"location": {
														"type": "object",
														"properties": {
															"type": {
																"type": "string"
															},
															"fileName": {
																"type": "string"
															},
															"folderPath": {
																"type": "string"
															},
															"fileSystem": {
																"type": "string"
															}
														}
													},
													"compressionCodec": {
														"type": "string"
													}
												}
											},
											"schema": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"name": {
															"type": "string"
														},
														"type": {
															"type": "string"
														}
													}
												}
											}
										}
									},
									"etag": {
										"type": "string"
									}
								}
							}
						},
						"nextLink": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/jsonstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "jsonstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "blah.json",
						"folderPath": "json",
						"fileSystem": "chanleyblob"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"value": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"type": {
										"type": "string"
									},
									"properties": {
										"type": "object",
										"properties": {
											"linkedServiceName": {
												"type": "object",
												"properties": {
													"referenceName": {
														"type": "string"
													},
													"type": {
														"type": "string"
													}
												}
											},
											"folder": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string"
													}
												}
											},
											"annotations": {
												"type": "array"
											},
											"type": {
												"type": "string"
											},
											"typeProperties": {
												"type": "object",
												"properties": {
													"location": {
														"type": "object",
														"properties": {
															"type": {
																"type": "string"
															},
															"fileName": {
																"type": "string"
															},
															"folderPath": {
																"type": "string"
															},
															"fileSystem": {
																"type": "string"
															}
														}
													},
													"compressionCodec": {
														"type": "string"
													}
												}
											},
											"schema": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"name": {
															"type": "string"
														},
														"type": {
															"type": "string"
														}
													}
												}
											}
										}
									},
									"etag": {
										"type": "string"
									}
								}
							}
						},
						"nextLink": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/jsonstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MyPipeline')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "misc"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "mypipeline"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/chanleysvc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestResource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your REST/HTTP",
				"linkedServiceName": {
					"referenceName": "rest_data_sets",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ADF"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "https://management.azure.com/subscriptions/a192e78c-6b15-4954-b587-3cce7c28eb26/resourceGroups/chanley_rg/providers/Microsoft.DataFactory/factories/chanleydf/datasets?api-version=2018-06-01"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/rest_data_sets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to your Azure Data Lake Store",
				"linkedServiceName": {
					"referenceName": "jsonstorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Container": {
						"type": "string"
					},
					"Directory": {
						"type": "string"
					},
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "misc"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().Directory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Container",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/jsonstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/activitiesJSAON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "miscparquest",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ADF"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Aladdin_e36dbf93-f1f5-4732-b58c-d815c49338fb.json",
						"folderPath": "json",
						"fileSystem": "chanleyblob"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"value": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"activityRunEnd": {
										"type": "string"
									},
									"activityName": {
										"type": "string"
									},
									"activityRunStart": {
										"type": "string"
									},
									"activityType": {
										"type": "string"
									},
									"durationInMs": {
										"type": "integer"
									},
									"retryAttempt": {
										"type": "null"
									},
									"error": {
										"type": "object",
										"properties": {
											"errorCode": {
												"type": "string"
											},
											"message": {
												"type": "string"
											},
											"failureType": {
												"type": "string"
											},
											"target": {
												"type": "string"
											},
											"details": {
												"type": "string"
											}
										}
									},
									"activityRunId": {
										"type": "string"
									},
									"iterationHash": {
										"type": "string"
									},
									"input": {
										"type": "object",
										"properties": {
											"source": {
												"type": "object",
												"properties": {
													"type": {
														"type": "string"
													},
													"sqlReaderQuery": {
														"type": "string"
													},
													"queryTimeout": {
														"type": "string"
													},
													"partitionOption": {
														"type": "string"
													}
												}
											},
											"dataset": {
												"type": "object",
												"properties": {
													"referenceName": {
														"type": "string"
													},
													"type": {
														"type": "string"
													},
													"parameters": {
														"type": "object"
													}
												}
											},
											"firstRowOnly": {
												"type": "boolean"
											}
										}
									},
									"linkedServiceName": {
										"type": "string"
									},
									"output": {
										"type": "object",
										"properties": {
											"count": {
												"type": "integer"
											},
											"value": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"server_name": {
															"type": "string"
														},
														"adhoc": {
															"type": "string"
														},
														"load_frequency": {
															"type": "string"
														},
														"src_type": {
															"type": "string"
														},
														"src_schema": {
															"type": "string"
														},
														"src_db": {
															"type": "string"
														},
														"src_name": {
															"type": "string"
														},
														"dst_type": {
															"type": "string"
														},
														"dst_name": {
															"type": "string"
														},
														"include_pipeline_flag": {
															"type": "integer"
														},
														"process_type": {
															"type": "string"
														},
														"priority_lane": {
															"type": "integer"
														},
														"pipeline_date": {
															"type": "string"
														},
														"pipeline_status": {
															"type": "string"
														},
														"dst_folder": {
															"type": "string"
														},
														"file_type": {
															"type": "string"
														},
														"last_modified_folder_date": {
															"type": "string"
														}
													}
												}
											},
											"effectiveIntegrationRuntime": {
												"type": "string"
											},
											"billingReference": {
												"type": "object",
												"properties": {
													"activityType": {
														"type": "string"
													},
													"billableDuration": {
														"type": "array",
														"items": {
															"type": "object",
															"properties": {
																"meterType": {
																	"type": "string"
																},
																"duration": {
																	"type": "number"
																},
																"unit": {
																	"type": "string"
																}
															}
														}
													}
												}
											},
											"durationInQueue": {
												"type": "object",
												"properties": {
													"integrationRuntimeQueue": {
														"type": "integer"
													}
												}
											}
										}
									},
									"userProperties": {
										"type": "object"
									},
									"pipelineName": {
										"type": "string"
									},
									"pipelineRunId": {
										"type": "string"
									},
									"status": {
										"type": "string"
									},
									"recoveryStatus": {
										"type": "string"
									},
									"integrationRuntimeNames": {
										"type": "array",
										"items": {
											"type": "string"
										}
									},
									"executionDetails": {
										"type": "object",
										"properties": {
											"integrationRuntime": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"name": {
															"type": "string"
														},
														"type": {
															"type": "string"
														},
														"location": {
															"type": "string"
														},
														"nodes": {
															"type": "array",
															"items": {
																"type": "string"
															}
														}
													}
												}
											}
										}
									},
									"id": {
										"type": "string"
									}
								}
							}
						},
						"continuationToken": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/miscparquest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/activitiesPIPE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "miscparquest",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ADF"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "activities.txt",
						"folderPath": "json",
						"fileSystem": "chanleyblob"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/miscparquest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ads_datasets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "adf",
					"table": "ads_datatasets"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/chanleysvc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/asbuilt')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "miscparquest",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "misc"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "registration_dttm",
						"type": "INT96"
					},
					{
						"name": "id",
						"type": "INT32"
					},
					{
						"name": "first_name",
						"type": "UTF8"
					},
					{
						"name": "last_name",
						"type": "UTF8"
					},
					{
						"name": "email",
						"type": "UTF8"
					},
					{
						"name": "gender",
						"type": "UTF8"
					},
					{
						"name": "ip_address",
						"type": "UTF8"
					},
					{
						"name": "cc",
						"type": "UTF8"
					},
					{
						"name": "country",
						"type": "UTF8"
					},
					{
						"name": "birthdate",
						"type": "UTF8"
					},
					{
						"name": "salary",
						"type": "DOUBLE"
					},
					{
						"name": "title",
						"type": "UTF8"
					},
					{
						"name": "comments",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/miscparquest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/boohoo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "jsonstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "boohoo.txt",
						"folderPath": "json",
						"fileSystem": "chanleyblob"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/jsonstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyActJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "miscparquest",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "misc"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "blah.json",
						"folderPath": "json",
						"fileSystem": "chanleyblob"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/miscparquest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datasetJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "miscparquest",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"SinkContainer": {
						"type": "string"
					},
					"SinkDirectory": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ADF"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().SinkDirectory",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().SinkContainer",
							"type": "Expression"
						}
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"value": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"type": {
										"type": "string"
									},
									"properties": {
										"type": "object",
										"properties": {
											"linkedServiceName": {
												"type": "object",
												"properties": {
													"type": {
														"type": "string"
													},
													"referenceName": {
														"type": "string"
													}
												}
											},
											"annotations": {
												"type": "array"
											},
											"type": {
												"type": "string"
											},
											"typeProperties": {
												"type": "object",
												"properties": {
													"fileName": {
														"type": "string"
													},
													"folderPath": {
														"type": "string"
													}
												}
											}
										}
									},
									"etag": {
										"type": "string"
									}
								}
							}
						},
						"nextLink": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/miscparquest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datasetPIPE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "miscparquest",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ADF"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dataset.txt",
						"folderPath": "json",
						"fileSystem": "chanleyblob"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/miscparquest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datasetnames')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "jsonstorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "blah.json",
						"folderPath": "json",
						"fileSystem": "chanleyblob"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"id": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"properties": {
							"type": "object",
							"properties": {
								"linkedServiceName": {
									"type": "object",
									"properties": {
										"referenceName": {
											"type": "string"
										},
										"type": {
											"type": "string"
										}
									}
								},
								"annotations": {
									"type": "array"
								},
								"type": {
									"type": "string"
								},
								"schema": {
									"type": "array",
									"items": {
										"type": "object",
										"properties": {
											"name": {
												"type": "string"
											},
											"type": {
												"type": "string"
											}
										}
									}
								},
								"typeProperties": {
									"type": "object",
									"properties": {
										"schema": {
											"type": "string"
										},
										"table": {
											"type": "string"
										}
									}
								}
							}
						},
						"etag": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/jsonstorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/jsonpipeline')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "miscparquest",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "misc"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "PipeLinesByFactory.json",
						"folderPath": "json",
						"fileSystem": "chanleyblob"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"value": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "string"
									},
									"name": {
										"type": "string"
									},
									"type": {
										"type": "string"
									},
									"properties": {
										"type": "object",
										"properties": {
											"activities": {
												"type": "array",
												"items": {
													"type": "object",
													"properties": {
														"name": {
															"type": "string"
														},
														"type": {
															"type": "string"
														},
														"dependsOn": {
															"type": "array"
														},
														"policy": {
															"type": "object",
															"properties": {
																"timeout": {
																	"type": "string"
																},
																"retry": {
																	"type": "integer"
																},
																"retryIntervalInSeconds": {
																	"type": "integer"
																},
																"secureOutput": {
																	"type": "boolean"
																},
																"secureInput": {
																	"type": "boolean"
																}
															}
														},
														"userProperties": {
															"type": "array"
														},
														"typeProperties": {
															"type": "object",
															"properties": {
																"dataflow": {
																	"type": "object",
																	"properties": {
																		"referenceName": {
																			"type": "string"
																		},
																		"type": {
																			"type": "string"
																		},
																		"parameters": {
																			"type": "object"
																		},
																		"datasetParameters": {
																			"type": "object",
																			"properties": {
																				"srcTableA": {
																					"type": "object"
																				},
																				"tgtTableB": {
																					"type": "object"
																				}
																			}
																		}
																	}
																},
																"staging": {
																	"type": "object"
																},
																"integrationRuntime": {
																	"type": "object",
																	"properties": {
																		"referenceName": {
																			"type": "string"
																		},
																		"type": {
																			"type": "string"
																		}
																	}
																}
															}
														}
													}
												}
											},
											"folder": {
												"type": "object",
												"properties": {
													"name": {
														"type": "string"
													}
												}
											},
											"annotations": {
												"type": "array"
											},
											"lastPublishTime": {
												"type": "string"
											}
										}
									},
									"etag": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/miscparquest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/srcSKU')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "misc"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemName",
						"type": "varchar"
					},
					{
						"name": "ItemSkew",
						"type": "varchar"
					},
					{
						"name": "DatePurchase",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateReturned",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "cost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "DateLoaded",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateUpdated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateDeleted",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "srcTableA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/chanleysvc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/srcTableA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Upserts"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemName",
						"type": "varchar"
					},
					{
						"name": "ItemSkew",
						"type": "varchar"
					},
					{
						"name": "DatePurchase",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateReturned",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "cost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "DateLoaded",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateUpdated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateDeleted",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "srcTableA"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/chanleysvc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/srcTrigger')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "miscparquest",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string",
						"defaultValue": "@pipeline().parameters.SourceFile"
					}
				},
				"folder": {
					"name": "misc"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "Trigger",
						"fileSystem": "chanleyblob"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "registration_dttm",
						"type": "INT96"
					},
					{
						"name": "id",
						"type": "INT32"
					},
					{
						"name": "first_name",
						"type": "UTF8"
					},
					{
						"name": "last_name",
						"type": "UTF8"
					},
					{
						"name": "email",
						"type": "UTF8"
					},
					{
						"name": "gender",
						"type": "UTF8"
					},
					{
						"name": "ip_address",
						"type": "UTF8"
					},
					{
						"name": "cc",
						"type": "UTF8"
					},
					{
						"name": "country",
						"type": "UTF8"
					},
					{
						"name": "birthdate",
						"type": "UTF8"
					},
					{
						"name": "salary",
						"type": "DOUBLE"
					},
					{
						"name": "title",
						"type": "UTF8"
					},
					{
						"name": "comments",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/miscparquest')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/src_chanley')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/chanleysvc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tgtSKU')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "misc"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemName",
						"type": "varchar"
					},
					{
						"name": "ItemSkew",
						"type": "varchar"
					},
					{
						"name": "DatePurchase",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateReturned",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "cost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "DateLoaded",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateUpdated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateDeleted",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tgtTableB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/chanleysvc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tgtTableB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Upserts"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ItemName",
						"type": "varchar"
					},
					{
						"name": "ItemSkew",
						"type": "varchar"
					},
					{
						"name": "DatePurchase",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateReturned",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "cost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "DateLoaded",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateUpdated",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "DateDeleted",
						"type": "datetime2",
						"scale": 7
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tgtTableB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/chanleysvc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tgtTrigger')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "chanleysvc",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "chanley"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "registration_dttm",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "first_name",
						"type": "nvarchar"
					},
					{
						"name": "last_name",
						"type": "nvarchar"
					},
					{
						"name": "email",
						"type": "nvarchar"
					},
					{
						"name": "gender",
						"type": "nvarchar"
					},
					{
						"name": "ip_address",
						"type": "nvarchar"
					},
					{
						"name": "cc",
						"type": "nvarchar"
					},
					{
						"name": "country",
						"type": "nvarchar"
					},
					{
						"name": "birthdate",
						"type": "nvarchar"
					},
					{
						"name": "salary",
						"type": "float",
						"precision": 15
					},
					{
						"name": "title",
						"type": "nvarchar"
					},
					{
						"name": "comments",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "trigger"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/chanleysvc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Names')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Names_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/chanley54Synapse')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('chanley54Synapse_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/chanleypool')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('chanleypool_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/chanleysvc')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('chanleysvc_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/databrickslinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-4430222745813530.10.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('databrickslinkedservice_accessToken')]"
					},
					"existingClusterId": "0530-195028-quack609"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/jsonstorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('jsonstorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('jsonstorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/miscparquest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('miscparquest_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('miscparquest_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rest_data_sets')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('rest_data_sets_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "ManagedServiceIdentity",
					"aadResourceId": "[parameters('rest_data_sets_properties_typeProperties_aadResourceId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EventTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Trigger",
							"type": "PipelineReference"
						},
						"parameters": {
							"SourceFile": "[parameters('EventTrigger_properties_Trigger_parameters_SourceFile')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/chanleyblob/blobs/Trigger/",
					"blobPathEndsWith": ".parquet",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('EventTrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Trigger')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR30Minutes')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 30
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TTL10minutesIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"description": "Azure IR with a 10 minute TTL",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/datasets')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "datasetnames",
								"type": "DatasetReference"
							},
							"name": "srcDS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ads_datasets",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Flatten1"
						}
					],
					"script": "source(output(\n\t\tvalue as (etag as string, id as string, name as string, properties as (annotations as string[], description as string, folder as (name as string), linkedServiceName as (referenceName as string, type as string), parameters as (Container as (type as string), Directory as (type as string), FileName as (defaultValue as string, type as string), SinkContainer as (type as string), SinkDirectory as (type as string), fileName as (type as string)), schema as string, type as string, typeProperties as (columnDelimiter as string, compressionCodec as string, escapeChar as string, firstRowAsHeader as boolean, location as (fileName as string, fileSystem as string, folderPath as string, type as string), quoteChar as string, relativeUrl as string, schema as string, table as string)), type as string)[]\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> srcDS\nsrcDS foldDown(unroll(value.properties.annotations, value),\n\tmapColumn(\n\t\tetag = value.etag,\n\t\tid = value.id,\n\t\tname = value.name,\n\t\tdescription = value.properties.description,\n\t\tfolder = value.properties.folder.name,\n\t\tlinkedServiceName = value.properties.linkedServiceName.referenceName,\n\t\tparameters = value.properties.parameters,\n\t\tschema = value.properties.schema,\n\t\tds_type = value.properties.type,\n\t\tds_typeProperties = value.properties.typeProperties.location.fileName,\n\t\ttype = value.type\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> Flatten1\nFlatten1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tetag,\n\t\tid,\n\t\tname,\n\t\tdescription,\n\t\tfolder,\n\t\tlinkedServiceName,\n\t\tschema,\n\t\tds_type,\n\t\tds_typeProperties,\n\t\ttype\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/datasetnames')]",
				"[concat(variables('factoryId'), '/datasets/ads_datasets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dfUpsert')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "srcTableA",
								"type": "DatasetReference"
							},
							"name": "srcTableA"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "tgtTableB",
								"type": "DatasetReference"
							},
							"name": "tgtTableB"
						}
					],
					"transformations": [
						{
							"name": "upsert"
						}
					],
					"script": "source(output(\n\t\tItemName as string,\n\t\tItemSkew as string,\n\t\tDatePurchase as timestamp,\n\t\tDateReturned as timestamp,\n\t\tcost as decimal(19,4)\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select\\nItemName, ItemSkew, DatePurchase, DateReturned, cost\\nfrom\\n [dbo].[srcTableA]',\n\tformat: 'query') ~> srcTableA\nsrcTableA alterRow(upsertIf(true())) ~> upsert\nupsert sink(input(\n\t\tID as integer,\n\t\tItemName as string,\n\t\tItemSkew as string,\n\t\tDatePurchase as timestamp,\n\t\tDateReturned as timestamp,\n\t\tcost as decimal(19,4),\n\t\tDateLoaded as timestamp,\n\t\tDateUpdated as timestamp,\n\t\tDateDeleted as timestamp\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ItemSkew'],\n\tformat: 'table',\n\tmapColumn(\n\t\tItemName,\n\t\tItemSkew,\n\t\tDatePurchase,\n\t\tDateReturned,\n\t\tcost\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> tgtTableB"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/srcTableA')]",
				"[concat(variables('factoryId'), '/datasets/tgtTableB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SwitchTest')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ftlSwitch",
						"type": "Switch",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.dst_name",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "vintage_fact",
									"activities": [
										{
											"name": "vintage_fact_copy",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "JsonSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true
													},
													"formatSettings": {
														"type": "JsonReadSettings"
													}
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings",
														"copyBehavior": "MergeFiles"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "[['id']"
															},
															"sink": {
																"name": "id",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['name']"
															},
															"sink": {
																"name": "name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['type']"
															},
															"sink": {
																"name": "type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['properties']['linkedServiceName']['referenceName']"
															},
															"sink": {
																"name": "LS_referenceName",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['properties']['linkedServiceName']['type']"
															},
															"sink": {
																"name": "LS_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['properties']['folder']['name']"
															},
															"sink": {
																"name": "folder_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['properties']['type']"
															},
															"sink": {
																"name": "folder_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['properties']['typeProperties']['location']['type']"
															},
															"sink": {
																"name": "location_type"
															}
														},
														{
															"source": {
																"path": "[['properties']['typeProperties']['location']['fileName']"
															},
															"sink": {
																"name": "fileName"
															}
														},
														{
															"source": {
																"path": "[['properties']['typeProperties']['location']['folderPath']"
															},
															"sink": {
																"name": "folderPath"
															}
														},
														{
															"source": {
																"path": "[['properties']['typeProperties']['location']['fileSystem']"
															},
															"sink": {
																"name": "fileSystem"
															}
														},
														{
															"source": {
																"path": "[['properties']['typeProperties']['compressionCodec']"
															},
															"sink": {
																"name": "compressionCodec"
															}
														},
														{
															"source": {
																"path": "[['properties']['schema'][0]['name']"
															},
															"sink": {
																"name": "schema_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['properties']['schema'][0]['type']"
															},
															"sink": {
																"name": "schema_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['etag']"
															},
															"sink": {
																"name": "etag",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['nextLink']"
															},
															"sink": {
																"name": "nextLink",
																"type": "String"
															}
														}
													],
													"collectionReference": "$['value']",
													"mapComplexValuesToString": true
												}
											},
											"inputs": [
												{
													"referenceName": "Json1",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "DelimitedText2",
													"type": "DatasetReference",
													"parameters": {}
												}
											]
										}
									]
								},
								{
									"value": "install_base",
									"activities": [
										{
											"name": "copyInstall_base",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "JsonSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true
													},
													"formatSettings": {
														"type": "JsonReadSettings"
													}
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings",
														"copyBehavior": "MergeFiles"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "[['id']"
															},
															"sink": {
																"name": "id",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['name']"
															},
															"sink": {
																"name": "name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['type']"
															},
															"sink": {
																"name": "type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['properties']['linkedServiceName']['referenceName']"
															},
															"sink": {
																"name": "LS_referenceName",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['properties']['linkedServiceName']['type']"
															},
															"sink": {
																"name": "LS_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['properties']['folder']['name']"
															},
															"sink": {
																"name": "folder_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['properties']['type']"
															},
															"sink": {
																"name": "folder_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['properties']['typeProperties']['location']['type']"
															},
															"sink": {
																"name": "location_type"
															}
														},
														{
															"source": {
																"path": "[['properties']['typeProperties']['location']['fileName']"
															},
															"sink": {
																"name": "fileName"
															}
														},
														{
															"source": {
																"path": "[['properties']['typeProperties']['location']['folderPath']"
															},
															"sink": {
																"name": "folderPath"
															}
														},
														{
															"source": {
																"path": "[['properties']['typeProperties']['location']['fileSystem']"
															},
															"sink": {
																"name": "fileSystem"
															}
														},
														{
															"source": {
																"path": "[['properties']['typeProperties']['compressionCodec']"
															},
															"sink": {
																"name": "compressionCodec"
															}
														},
														{
															"source": {
																"path": "[['properties']['schema'][0]['name']"
															},
															"sink": {
																"name": "schema_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['properties']['schema'][0]['type']"
															},
															"sink": {
																"name": "schema_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "[['etag']"
															},
															"sink": {
																"name": "etag",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "$['nextLink']"
															},
															"sink": {
																"name": "nextLink",
																"type": "String"
															}
														}
													],
													"collectionReference": "$['value']",
													"mapComplexValuesToString": true
												}
											},
											"inputs": [
												{
													"referenceName": "Json1",
													"type": "DatasetReference",
													"parameters": {}
												}
											],
											"outputs": [
												{
													"referenceName": "DelimitedText2",
													"type": "DatasetReference",
													"parameters": {}
												}
											]
										}
									]
								}
							]
						}
					},
					{
						"name": "blahMain",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "ftlSwitch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['linkedServiceName']['referenceName']"
										},
										"sink": {
											"name": "LS_referenceName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['linkedServiceName']['type']"
										},
										"sink": {
											"name": "LS_type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['folder']['name']"
										},
										"sink": {
											"name": "folder_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['type']"
										},
										"sink": {
											"name": "folder_type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['typeProperties']['location']['type']"
										},
										"sink": {
											"name": "location_type"
										}
									},
									{
										"source": {
											"path": "[['properties']['typeProperties']['location']['fileName']"
										},
										"sink": {
											"name": "fileName"
										}
									},
									{
										"source": {
											"path": "[['properties']['typeProperties']['location']['folderPath']"
										},
										"sink": {
											"name": "folderPath"
										}
									},
									{
										"source": {
											"path": "[['properties']['typeProperties']['location']['fileSystem']"
										},
										"sink": {
											"name": "fileSystem"
										}
									},
									{
										"source": {
											"path": "[['properties']['typeProperties']['compressionCodec']"
										},
										"sink": {
											"name": "compressionCodec"
										}
									},
									{
										"source": {
											"path": "[['properties']['schema'][0]['name']"
										},
										"sink": {
											"name": "schema_name",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['properties']['schema'][0]['type']"
										},
										"sink": {
											"name": "schema_type",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['etag']"
										},
										"sink": {
											"name": "etag",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['nextLink']"
										},
										"sink": {
											"name": "nextLink",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": true
							}
						},
						"inputs": [
							{
								"referenceName": "Json1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedText2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"dst_name": {
						"type": "string",
						"defaultValue": "vintage_fact"
					}
				},
				"folder": {
					"name": "ADF"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Json1')]",
				"[concat(variables('factoryId'), '/datasets/DelimitedText2')]"
			]
		}
	]
}
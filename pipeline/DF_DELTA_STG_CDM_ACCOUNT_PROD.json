{
	"name": "DF_DELTA_STG_CDM_ACCOUNT_PROD",
	"properties": {
		"folder": {
			"name": "DF_CDM_Delta_Load"
		},
		"annotations": [],
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "STG_INVOLVED_PARTY",
						"type": "DatasetReference"
					},
					"name": "InvolvedParty"
				},
				{
					"dataset": {
						"referenceName": "STG_ClosedDateQuery",
						"type": "DatasetReference"
					},
					"name": "ClosedDate"
				},
				{
					"dataset": {
						"referenceName": "STG_M_RELATIONSHIP_GROUPING",
						"type": "DatasetReference"
					},
					"name": "OfficerGroup"
				},
				{
					"dataset": {
						"referenceName": "STG_ORG_UNIT_H_HIERARCHY",
						"type": "DatasetReference"
					},
					"name": "BranchPrimary"
				},
				{
					"dataset": {
						"referenceName": "EdwAccount",
						"type": "DatasetReference"
					},
					"name": "CDMAccountUpdate"
				},
				{
					"dataset": {
						"referenceName": "EdwAccount",
						"type": "DatasetReference"
					},
					"name": "CDMAccountHistroy"
				},
				{
					"dataset": {
						"referenceName": "EdwAccount",
						"type": "DatasetReference"
					},
					"name": "CDMAccountRowKey"
				},
				{
					"dataset": {
						"referenceName": "EdwAccount",
						"type": "DatasetReference"
					},
					"name": "AbsoluteHistoricalRecords"
				},
				{
					"dataset": {
						"referenceName": "STG_INVOLVED_PARTY",
						"type": "DatasetReference"
					},
					"name": "CustomerStartDate"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					},
					"schemaLinkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "InvolvedPartyWithClosedDate"
				},
				{
					"name": "JoinOfficerGroup"
				},
				{
					"name": "RenameToStdColName"
				},
				{
					"name": "JoinToBranchPrimary"
				},
				{
					"name": "DerivedBranchPrimary"
				},
				{
					"name": "Exists1"
				},
				{
					"name": "DeActivateOldVersion"
				},
				{
					"name": "IdentifyingHistoricalRecords"
				},
				{
					"name": "ConvertToDate"
				},
				{
					"name": "CombineActiveInactiveRecords"
				},
				{
					"name": "CDMRowKey"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "Exists2"
				},
				{
					"name": "ConvertToProperDate"
				},
				{
					"name": "JoinToGetCustStartDate"
				}
			],
			"script": "source(output(\n\t\tCUSTOMER_ID as string,\n\t\tINVOLVED_PARTY_ID as string,\n\t\tNAME_FULL as string,\n\t\tPERSONAL_CODE as string,\n\t\tPHONE_NUMBER_PRIMARY as string,\n\t\tRISK_CODE as string,\n\t\tDATE_SERVICE_FIRST as date,\n\t\tFIRSTSERVICEDATE as date,\n\t\tPHONE_NUMBER_CELLULAR as string,\n\t\tSIC_CODE as string,\n\t\tBRANCH_PRIMARY as string,\n\t\tEMAIL_BUSINESS as string,\n\t\tOFFICER_PRIMARY as string,\n\t\tUSER_DEFINED_5V_04 as string,\n\t\tEMAIL_HOME as string,\n\t\tSOLICITABLE_IND as string,\n\t\tSOLICITABLE_IND_EMAIL as string,\n\t\tSOURCENATURALKEY as string,\n\t\tTAX_ID_NUMBER as string,\n\t\tLOAD_DATE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: '\\nSELECT \\nCUSTOMER_ID,\\nINVOLVED_PARTY_ID,\\nNAME_FULL,\\nPERSONAL_CODE,\\nPHONE_NUMBER_PRIMARY,\\nRISK_CODE,\\nCAST(DATE_SERVICE_FIRST AS DATE) AS DATE_SERVICE_FIRST,\\nCAST(DATE_SERVICE_FIRST AS DATE) AS FIRSTSERVICEDATE,\\nPHONE_NUMBER_CELLULAR,\\nSIC_CODE,\\nBRANCH_PRIMARY,\\nEMAIL_BUSINESS, \\'1-\\' + OFFICER_PRIMARY AS OFFICER_PRIMARY,\\nNULLIF(USER_DEFINED_5V_04, \\'\\') AS USER_DEFINED_5V_04,\\nEMAIL_HOME,\\nISNULL(SOLICITABLE_IND, \\'U\\') AS SOLICITABLE_IND,\\nSOLICITABLE_IND_EMAIL,\\n\\'1-\\' + INVOLVED_PARTY_ID AS SOURCENATURALKEY,\\nTAX_ID_NUMBER = CASE WHEN LEN(TAX_ID_NUMBER) = 11 THEN SUBSTRING(TAX_ID_NUMBER, 3, 9) ELSE  TAX_ID_NUMBER END,\\nLOAD_DATE\\nFROM [Staging].[STG_INVOLVED_PARTY]\\nwhere PERSONAL_CODE=\\'N\\' and load_date=cast(getdate() as date) and involved_party_id not like \\'221%\\'',\n\tformat: 'query',\n\tstaged: true) ~> InvolvedParty\nsource(output(\n\t\tTAX_ID_NUMBER as string,\n\t\tDATE_CLOSED as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT TAX_ID_NUMBER, MAX(DATE_CLOSED) AS DATE_CLOSED FROM\\n\\n(\\n\\n\\nSELECT * FROM \\n\\n(\\n\\nSELECT DISTINCT IP.TAX_ID_NUMBER,\tPOP.DATE_CHARGE_OFF DATE_CLOSED  FROM\\n(\\nSELECT INVOLVED_PARTY_ID, \\nTAX_ID_NUMBER = case when len(tax_id_number)>9 and len(tax_id_number)=11 then substring(tax_id_number,3,len(tax_id_number)) else tax_id_number end \\nFROM [Staging].[STG_INVOLVED_PARTY]\\nwhere  personal_code=\\'N\\'  and load_date=cast(getdate() as date)\\n) IP\\nJOIN\\n(\\nSELECT  IPR.BANK_NUMBER, IPR.APPL_ID, IPR.ACCOUNT_NUMBER, IPR.INVOLVED_PARTY_ID ,max(load_date) as ld\\nFROM  [Staging].[STG_IP_POP_RELATIONSHIP]  IPR\\nWHERE BANK_NUMBER != \\'221\\' AND APPL_ID IN (\\'TR3\\')\\ngroup by  IPR.BANK_NUMBER, IPR.APPL_ID, IPR.ACCOUNT_NUMBER, IPR.INVOLVED_PARTY_ID \\n)IPR ON IP.INVOLVED_PARTY_ID = IPR.INVOLVED_PARTY_ID\\nJOIN\\n(\\nSELECT  BANK_NUMBER, APPL_ID, ACCOUNT_NUMBER, CAST(DATE_CHARGE_OFF AS DATE) DATE_CHARGE_OFF ,max(load_date) as ld\\nFROM [Staging].[STG_PRODUCT_OFFER_PURCHASE] \\nWHERE BANK_NUMBER != \\'221\\' AND APPL_ID IN (\\'TR3\\')\\ngroup by BANK_NUMBER, APPL_ID, ACCOUNT_NUMBER,DATE_CHARGE_OFF\\n) POP \\nON  IPR.BANK_NUMBER = POP.BANK_NUMBER AND  IPR.APPL_ID = POP.APPL_ID  AND IPR.ACCOUNT_NUMBER = POP.ACCOUNT_NUMBER\\n\\n\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n\\n\\nUNION\\n\\n\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n\\n\\nSELECT DISTINCT IP.TAX_ID_NUMBER, LD.DATE_CLOSED   FROM\\n(\\nSELECT INVOLVED_PARTY_ID, TAX_ID_NUMBER = case when len(tax_id_number)>9 and len(tax_id_number)=11 then substring(tax_id_number,3,len(tax_id_number)) else tax_id_number end \\nFROM [Staging].[STG_INVOLVED_PARTY]\\nwhere personal_code=\\'N\\'  and load_date=cast(getdate() as date)\\n) IP\\nJOIN\\n(\\nSELECT IPR.BANK_NUMBER, IPR.APPL_ID, IPR.ACCOUNT_NUMBER, IPR.INVOLVED_PARTY_ID,max(load_date) as ld\\nFROM  [Staging].[STG_IP_POP_RELATIONSHIP]  IPR \\nWHERE BANK_NUMBER != \\'221\\' AND APPL_ID IN (\\'TAC\\', \\'TAS\\', \\'TM\\', \\'LN\\')\\ngroup by IPR.BANK_NUMBER, IPR.APPL_ID, IPR.ACCOUNT_NUMBER, IPR.INVOLVED_PARTY_ID\\n)IPR ON IP.INVOLVED_PARTY_ID = IPR.INVOLVED_PARTY_ID\\nJOIN\\n(\\nSELECT BANK_NUMBER, APPL_ID, ACCOUNT_NUMBER, CAST(DATE_CLOSED AS DATE) DATE_CLOSED,max(load_date) as ld\\nFROM [Staging].[STG_LOAN_DATES] \\nWHERE BANK_NUMBER != \\'221\\' AND APPL_ID IN (\\'LN\\')\\ngroup by BANK_NUMBER, APPL_ID, ACCOUNT_NUMBER,DATE_CLOSED\\n) LD \\nON  IPR.BANK_NUMBER = LD.BANK_NUMBER AND  IPR.APPL_ID = LD.APPL_ID  AND IPR.ACCOUNT_NUMBER = LD.ACCOUNT_NUMBER\\n\\n\\n\\n\\n\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n\\n\\nUNION\\n\\n\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n\\n\\n\\nSELECT DISTINCT IP.TAX_ID_NUMBER, DD.DATE_CLOSED   FROM\\n(\\nSELECT INVOLVED_PARTY_ID, TAX_ID_NUMBER = case when len(tax_id_number)>9 and len(tax_id_number)=11 then substring(tax_id_number,3,len(tax_id_number)) else tax_id_number end FROM [Staging].[STG_INVOLVED_PARTY]\\nwhere  personal_code=\\'N\\'  and load_date=cast(getdate() as date)\\n) IP\\nJOIN\\n(\\nSELECT IPR.BANK_NUMBER, IPR.APPL_ID, IPR.ACCOUNT_NUMBER, IPR.INVOLVED_PARTY_ID ,max(load_date) as ld\\nFROM  [Staging].[STG_IP_POP_RELATIONSHIP]  IPR WHERE BANK_NUMBER != \\'221\\' AND APPL_ID IN (\\'TAC\\', \\'TAS\\', \\'TM\\', \\'LN\\')\\ngroup by IPR.BANK_NUMBER, IPR.APPL_ID, IPR.ACCOUNT_NUMBER, IPR.INVOLVED_PARTY_ID\\n)IPR ON IP.INVOLVED_PARTY_ID = IPR.INVOLVED_PARTY_ID\\nJOIN\\n(\\nSELECT BANK_NUMBER, APPL_ID, ACCOUNT_NUMBER, CAST(DATE_CLOSED AS DATE) DATE_CLOSED , max(load_date) as ld\\nFROM [Staging].[STG_DEPOSIT_DATES]  WHERE BANK_NUMBER != \\'221\\' AND APPL_ID IN (\\'TAC\\', \\'TAS\\', \\'TM\\')\\ngroup by BANK_NUMBER, APPL_ID, ACCOUNT_NUMBER,DATE_CLOSED\\n) DD\\nON  IPR.BANK_NUMBER = DD.BANK_NUMBER AND  IPR.APPL_ID = DD.APPL_ID  AND IPR.ACCOUNT_NUMBER = DD.ACCOUNT_NUMBER\\n\\n\\n\\n) baseData\\n\\n-------------------NOT NULL\\n\\nWHERE TAX_ID_NUMBER  not in \\n(\\n\\nSELECT TAX_ID_NUMBER FROM \\n\\n(\\n\\nSELECT DISTINCT IP.TAX_ID_NUMBER,\tPOP.DATE_CHARGE_OFF DATE_CLOSED  FROM\\n(\\nSELECT INVOLVED_PARTY_ID, \\nTAX_ID_NUMBER = case when len(tax_id_number)>9 and len(tax_id_number)=11 then substring(tax_id_number,3,len(tax_id_number)) else tax_id_number end FROM [Staging].[STG_INVOLVED_PARTY]\\nwhere  personal_code=\\'N\\'  and load_date=cast(getdate() as date)\\n) IP\\nJOIN\\n(\\nSELECT  IPR.BANK_NUMBER, IPR.APPL_ID, IPR.ACCOUNT_NUMBER, IPR.INVOLVED_PARTY_ID ,max(load_date) as ld\\nFROM  [Staging].[STG_IP_POP_RELATIONSHIP]  IPR\\nWHERE BANK_NUMBER != \\'221\\' AND APPL_ID IN (\\'TR3\\')\\ngroup by  IPR.BANK_NUMBER, IPR.APPL_ID, IPR.ACCOUNT_NUMBER, IPR.INVOLVED_PARTY_ID \\n)IPR ON IP.INVOLVED_PARTY_ID = IPR.INVOLVED_PARTY_ID\\nJOIN\\n(\\nSELECT  BANK_NUMBER, APPL_ID, ACCOUNT_NUMBER, CAST(DATE_CHARGE_OFF AS DATE) DATE_CHARGE_OFF ,max(load_date) as ld\\nFROM [Staging].[STG_PRODUCT_OFFER_PURCHASE] \\nWHERE BANK_NUMBER != \\'221\\' AND APPL_ID IN (\\'TR3\\')\\ngroup by BANK_NUMBER, APPL_ID, ACCOUNT_NUMBER,DATE_CHARGE_OFF\\n) POP \\nON  IPR.BANK_NUMBER = POP.BANK_NUMBER AND  IPR.APPL_ID = POP.APPL_ID  AND IPR.ACCOUNT_NUMBER = POP.ACCOUNT_NUMBER\\n\\n\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n\\n\\nUNION\\n\\n\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n\\n\\nSELECT DISTINCT IP.TAX_ID_NUMBER, LD.DATE_CLOSED   FROM\\n(\\nSELECT INVOLVED_PARTY_ID, TAX_ID_NUMBER = case when len(tax_id_number)>9 and len(tax_id_number)=11 then substring(tax_id_number,3,len(tax_id_number)) else tax_id_number end \\nFROM [Staging].[STG_INVOLVED_PARTY]\\nwhere  personal_code=\\'N\\'  and load_date=cast(getdate() as date)\\n) IP\\nJOIN\\n(\\nSELECT IPR.BANK_NUMBER, IPR.APPL_ID, IPR.ACCOUNT_NUMBER, IPR.INVOLVED_PARTY_ID,max(load_date) as ld\\nFROM  [Staging].[STG_IP_POP_RELATIONSHIP]  IPR \\nWHERE BANK_NUMBER != \\'221\\' AND APPL_ID IN (\\'TAC\\', \\'TAS\\', \\'TM\\', \\'LN\\')\\ngroup by IPR.BANK_NUMBER, IPR.APPL_ID, IPR.ACCOUNT_NUMBER, IPR.INVOLVED_PARTY_ID\\n)IPR ON IP.INVOLVED_PARTY_ID = IPR.INVOLVED_PARTY_ID\\nJOIN\\n(\\nSELECT BANK_NUMBER, APPL_ID, ACCOUNT_NUMBER, CAST(DATE_CLOSED AS DATE) DATE_CLOSED,max(load_date) as ld\\nFROM [Staging].[STG_LOAN_DATES] \\nWHERE BANK_NUMBER != \\'221\\' AND APPL_ID IN (\\'LN\\')\\ngroup by BANK_NUMBER, APPL_ID, ACCOUNT_NUMBER,DATE_CLOSED\\n) LD \\nON  IPR.BANK_NUMBER = LD.BANK_NUMBER AND  IPR.APPL_ID = LD.APPL_ID  AND IPR.ACCOUNT_NUMBER = LD.ACCOUNT_NUMBER\\n\\n\\n\\n\\n\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n\\n\\nUNION\\n\\n\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n----------------------------------------------------------------------------------------------------------------------------------------------------------------\\n\\n\\n\\nSELECT DISTINCT IP.TAX_ID_NUMBER, DD.DATE_CLOSED   FROM\\n(\\nSELECT INVOLVED_PARTY_ID, TAX_ID_NUMBER = case when len(tax_id_number)>9 and len(tax_id_number)=11 then substring(tax_id_number,3,len(tax_id_number)) else tax_id_number end FROM [Staging].[STG_INVOLVED_PARTY]\\nwhere  personal_code=\\'N\\'  and load_date=cast(getdate() as date)\\n) IP\\nJOIN\\n(\\nSELECT IPR.BANK_NUMBER, IPR.APPL_ID, IPR.ACCOUNT_NUMBER, IPR.INVOLVED_PARTY_ID ,max(load_date) as ld\\nFROM  [Staging].[STG_IP_POP_RELATIONSHIP]  IPR WHERE BANK_NUMBER != \\'221\\' AND APPL_ID IN (\\'TAC\\', \\'TAS\\', \\'TM\\', \\'LN\\')\\ngroup by IPR.BANK_NUMBER, IPR.APPL_ID, IPR.ACCOUNT_NUMBER, IPR.INVOLVED_PARTY_ID\\n)IPR ON IP.INVOLVED_PARTY_ID = IPR.INVOLVED_PARTY_ID\\nJOIN\\n(\\nSELECT BANK_NUMBER, APPL_ID, ACCOUNT_NUMBER, CAST(DATE_CLOSED AS DATE) DATE_CLOSED , max(load_date) as ld\\nFROM [Staging].[STG_DEPOSIT_DATES]  WHERE BANK_NUMBER != \\'221\\' AND APPL_ID IN (\\'TAC\\', \\'TAS\\', \\'TM\\')\\ngroup by BANK_NUMBER, APPL_ID, ACCOUNT_NUMBER,DATE_CLOSED\\n) DD\\nON  IPR.BANK_NUMBER = DD.BANK_NUMBER AND  IPR.APPL_ID = DD.APPL_ID  AND IPR.ACCOUNT_NUMBER = DD.ACCOUNT_NUMBER\\n\\n\\n\\n) AllTaxIdWhereDateClosedIsNull WHERE DATE_CLOSED is null\\n\\n\\n)\\n--END OF NOT NULL\\n\\n\\n)FINAL  GROUP BY TAX_ID_NUMBER\\n\\n',\n\tformat: 'query',\n\tstaged: true) ~> ClosedDate\nsource(output(\n\t\tINVOLVED_PARTY_ID as string,\n\t\tM_NAME_FULL as string,\n\t\tRELATIONSHIP_GROUP as string,\n\t\tOFFICER_GROUP as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT DISTINCT INVOLVED_PARTY_ID, M_NAME_FULL,\tRELATIONSHIP_GROUP,\tOFFICER_GROUP\\nFROM  [Staging].[STG_M_RELATIONSHIP_GROUPING] ',\n\tformat: 'query',\n\tstaged: true) ~> OfficerGroup\nsource(output(\n\t\tLEVEL_04_ORG_UNIT_ID as string,\n\t\tinvolved_party_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'Select distinct LEVEL_04_ORG_UNIT_ID,ipp.involved_party_id\\nfrom staging.stg_involved_party ipp\\njoin [Staging].[STG_ORG_UNIT_H_HIERARCHY] oh\\non oh.LEVEL_05_ORG_UNIT_ID=concat(concat(concat(\\'2200\\',substring(ipp.branch_primary,1,2)),\\'0\\'),substring(ipp.branch_primary,3,1))\\nWHERE ORG_UNIT_MODEL_ID = \\'GEO\\' \\nand ipp.load_date=cast(getdate() as date)\\nand ipp.PERSONAL_CODE=\\'N\\'',\n\tformat: 'query',\n\tstaged: true) ~> BranchPrimary\nsource(output(\n\t\tcr94a_sourcecustomerid as string,\n\t\tname as string,\n\t\ttelephone1 as string,\n\t\tmsfsi_riskrating as string,\n\t\tcr94a_customerstartdate as string,\n\t\tcr94a_customerenddate as string,\n\t\tcr94a_firstservicedate as string,\n\t\tcr94a_mobilephonenumber as string,\n\t\tcr94a_naicsindustrycode as string,\n\t\tcr94a_branchsourcenaturalkey as string,\n\t\temailaddress1 as string,\n\t\tcr94a_usersourcenaturalkey as string,\n\t\tcr94a_relationshipgroupid as string,\n\t\tcr94a_relationshipgroupofficername as string,\n\t\temailaddress2 as string,\n\t\tcr94a_solicitableindicator as string,\n\t\tcr94a_solicitablemailcode as string,\n\t\tcr94a_sourcenaturalkey as string,\n\t\tcr94a_taxpayerid as string,\n\t\tcr94a_versionstartdate as string,\n\t\tcr94a_versionenddate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT \\ncr94a_sourcecustomerid,\\nname,\\ntelephone1,\\nmsfsi_riskrating,\\ncr94a_customerstartdate,\\ncr94a_customerenddate,\\ncr94a_firstservicedate,\\ncr94a_mobilephonenumber,\\ncr94a_naicsindustrycode,\\ncr94a_branchsourcenaturalkey,\\nemailaddress1,\\ncr94a_usersourcenaturalkey,\\ncr94a_relationshipgroupid,\\ncr94a_relationshipgroupofficername,\\nemailaddress2,\\ncr94a_solicitableindicator,\\ncr94a_solicitablemailcode,\\ncr94a_sourcenaturalkey,\\ncr94a_taxpayerid,\\ncr94a_versionstartdate,\\ncr94a_versionenddate\\nFROM EDW.ACCOUNT\\nWHERE cr94a_versionenddate=\\'9999-12-31\\' and cr94a_sourcecustomerid not like \\'221%\\'',\n\tformat: 'query',\n\tstaged: true,\n\twildcardPaths:['EDW/Company.p*']) ~> CDMAccountUpdate\nsource(output(\n\t\tcr94a_sourcecustomerid as string,\n\t\tname as string,\n\t\ttelephone1 as string,\n\t\tmsfsi_riskrating as string,\n\t\tcr94a_customerstartdate as string,\n\t\tcr94a_customerenddate as string,\n\t\tcr94a_firstservicedate as string,\n\t\tcr94a_mobilephonenumber as string,\n\t\tcr94a_naicsindustrycode as string,\n\t\tcr94a_branchsourcenaturalkey as string,\n\t\temailaddress1 as string,\n\t\tcr94a_usersourcenaturalkey as string,\n\t\tcr94a_relationshipgroupid as string,\n\t\tcr94a_relationshipgroupofficername as string,\n\t\temailaddress2 as string,\n\t\tcr94a_solicitableindicator as string,\n\t\tcr94a_solicitablemailcode as string,\n\t\tcr94a_sourcenaturalkey as string,\n\t\tcr94a_taxpayerid as string,\n\t\tcr94a_versionstartdate as string,\n\t\tcr94a_versionenddate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT \\ncr94a_sourcecustomerid,\\nname,\\ntelephone1,\\nmsfsi_riskrating,\\ncr94a_customerstartdate,\\ncr94a_customerenddate,\\ncr94a_firstservicedate,\\ncr94a_mobilephonenumber,\\ncr94a_naicsindustrycode,\\ncr94a_branchsourcenaturalkey,\\nemailaddress1,\\ncr94a_usersourcenaturalkey,\\ncr94a_relationshipgroupid,\\ncr94a_relationshipgroupofficername,\\nemailaddress2,\\ncr94a_solicitableindicator,\\ncr94a_solicitablemailcode,\\ncr94a_sourcenaturalkey,\\ncr94a_taxpayerid,\\ncr94a_versionstartdate,\\ncr94a_versionenddate\\nFROM EDW.ACCOUNT\\nwhere cr94a_versionenddate=\\'9999-12-31\\' and cr94a_sourcecustomerid not like \\'221%\\'',\n\tformat: 'query',\n\tstaged: true,\n\twildcardPaths:['EDW/Company.p*']) ~> CDMAccountHistroy\nsource(output(\n\t\tcr94a_sourcecustomerid as string,\n\t\tname as string,\n\t\ttelephone1 as string,\n\t\tmsfsi_riskrating as string,\n\t\tcr94a_customerstartdate as string,\n\t\tcr94a_customerenddate as string,\n\t\tcr94a_firstservicedate as string,\n\t\tcr94a_mobilephonenumber as string,\n\t\tcr94a_naicsindustrycode as string,\n\t\tcr94a_branchsourcenaturalkey as string,\n\t\temailaddress1 as string,\n\t\tcr94a_usersourcenaturalkey as string,\n\t\tcr94a_relationshipgroupid as string,\n\t\tcr94a_relationshipgroupofficername as string,\n\t\temailaddress2 as string,\n\t\tcr94a_solicitableindicator as string,\n\t\tcr94a_solicitablemailcode as string,\n\t\tcr94a_sourcenaturalkey as string,\n\t\tcr94a_taxpayerid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT \\ncr94a_sourcecustomerid,\\nname,\\ntelephone1,\\nmsfsi_riskrating,\\ncr94a_customerstartdate,\\ncr94a_customerenddate,\\ncr94a_firstservicedate,\\ncr94a_mobilephonenumber,\\ncr94a_naicsindustrycode,\\ncr94a_branchsourcenaturalkey,\\nemailaddress1,\\ncr94a_usersourcenaturalkey,\\ncr94a_relationshipgroupid,\\ncr94a_relationshipgroupofficername,\\nemailaddress2,\\ncr94a_solicitableindicator,\\ncr94a_solicitablemailcode,\\ncr94a_sourcenaturalkey,\\ncr94a_taxpayerid\\nFROM EDW.ACCOUNT\\nWHERE cr94a_versionenddate=\\'9999-12-31\\'',\n\tformat: 'query',\n\tstaged: true) ~> CDMAccountRowKey\nsource(output(\n\t\tcr94a_sourcecustomerid as string,\n\t\tname as string,\n\t\ttelephone1 as string,\n\t\tmsfsi_riskrating as string,\n\t\tcr94a_customerstartdate as string,\n\t\tcr94a_customerenddate as string,\n\t\tcr94a_firstservicedate as string,\n\t\tcr94a_mobilephonenumber as string,\n\t\tcr94a_naicsindustrycode as string,\n\t\tcr94a_branchsourcenaturalkey as string,\n\t\temailaddress1 as string,\n\t\tcr94a_usersourcenaturalkey as string,\n\t\tcr94a_relationshipgroupid as string,\n\t\tcr94a_relationshipgroupofficername as string,\n\t\temailaddress2 as string,\n\t\tcr94a_solicitableindicator as string,\n\t\tcr94a_solicitablemailcode as string,\n\t\tcr94a_sourcenaturalkey as string,\n\t\tcr94a_taxpayerid as string,\n\t\tcr94a_versionenddate as string,\n\t\tcr94a_versionstartdate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'SELECT \\ncr94a_sourcecustomerid,\\nname,\\ntelephone1,\\nmsfsi_riskrating,\\ncr94a_customerstartdate,\\ncr94a_customerenddate,\\ncr94a_firstservicedate,\\ncr94a_mobilephonenumber,\\ncr94a_naicsindustrycode,\\ncr94a_branchsourcenaturalkey,\\nemailaddress1,\\ncr94a_usersourcenaturalkey,\\ncr94a_relationshipgroupid,\\ncr94a_relationshipgroupofficername,\\nemailaddress2,\\ncr94a_solicitableindicator,\\ncr94a_solicitablemailcode,\\ncr94a_sourcenaturalkey,\\ncr94a_taxpayerid,\\ncr94a_versionenddate,\\ncr94a_versionstartdate\\nFROM EDW.ACCOUNT\\nWHERE cr94a_versionenddate!=\\'9999-12-31\\'',\n\tformat: 'query',\n\tstaged: true) ~> AbsoluteHistoricalRecords\nsource(output(\n\t\tTAX_ID_NUMBER as string,\n\t\tCustStartDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: '\\nSelect distinct   y.tax_id_number as TAX_ID_NUMBER , min(c.date_service_first) as CustStartDate from (\\nSelect case when len(tax_id_number)>9 and len(tax_id_number)=11 then substring(tax_id_number,3,len(tax_id_number)) else tax_id_number end as tax_id_number\\nfrom staging.stg_involved_party where load_date=cast(getdate() as date)\\n) y join\\n(Select case when len(tax_id_number)>9 and len(tax_id_number)=11 then substring(tax_id_number,3,len(tax_id_number)) else tax_id_number end as tax_id_number ,\\ndate_service_first\\nfrom staging.stg_involved_party ) c on c.tax_id_number=y.tax_id_number--Calculating the minimum date servive out of the above result\\ngroup by y.tax_id_number',\n\tformat: 'query',\n\tstaged: true) ~> CustomerStartDate\nJoinOfficerGroup, ClosedDate join(InvolvedParty@TAX_ID_NUMBER == ClosedDate@TAX_ID_NUMBER,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> InvolvedPartyWithClosedDate\nInvolvedParty, OfficerGroup join(InvolvedParty@INVOLVED_PARTY_ID == OfficerGroup@INVOLVED_PARTY_ID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinOfficerGroup\nDerivedBranchPrimary select(mapColumn(\n\t\tcustomer_ID = CUSTOMER_ID,\n\t\tcr94a_sourcecustomerid = InvolvedParty@INVOLVED_PARTY_ID,\n\t\tName = NAME_FULL,\n\t\tinvolve_party_type = PERSONAL_CODE,\n\t\ttelephone1 = PHONE_NUMBER_PRIMARY,\n\t\tmsfsi_riskrating = RISK_CODE,\n\t\tcr94a_customerstartdate = CustStartDate,\n\t\tcr94a_customerenddate = DATE_CLOSED,\n\t\tcr94a_firstservicedate = FIRSTSERVICEDATE,\n\t\tcr94a_mobilephonenumber = PHONE_NUMBER_CELLULAR,\n\t\tcr94a_naicsindustrycode = SIC_CODE,\n\t\tcr94a_branchsourcenaturalkey = DerivedBranchPrimary@Branch_Primary,\n\t\temailaddress1 = EMAIL_BUSINESS,\n\t\tcr94a_usersourcenaturalkey = OFFICER_PRIMARY,\n\t\tcr94a_relationshipgroupid = USER_DEFINED_5V_04,\n\t\tcr94a_relationshipgroupofficername = OFFICER_GROUP,\n\t\temailaddress2 = EMAIL_HOME,\n\t\tcr94a_solicitableindicator = SOLICITABLE_IND,\n\t\tcr94a_solicitablemailcode = SOLICITABLE_IND_EMAIL,\n\t\tcr94a_sourcenaturalkey = SOURCENATURALKEY,\n\t\tcr94a_taxpayerid = InvolvedParty@TAX_ID_NUMBER,\n\t\tcr94a_versionstartdate,\n\t\tcr94a_versionenddate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameToStdColName\nInvolvedPartyWithClosedDate, BranchPrimary join(InvolvedParty@INVOLVED_PARTY_ID == BranchPrimary@involved_party_id,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinToBranchPrimary\nJoinToGetCustStartDate derive(Branch_Primary = iif(isNull(LEVEL_04_ORG_UNIT_ID),'INVALID BRANCH',LEVEL_04_ORG_UNIT_ID),\n\t\tcr94a_versionstartdate = toDate(currentUTC()),\n\t\tcr94a_versionenddate = toDate('9999-12-31')) ~> DerivedBranchPrimary\nCDMAccountUpdate, Select1 exists(CDMAccountUpdate@cr94a_sourcenaturalkey == Select1@cr94a_sourcenaturalkey,\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists1\nExists1 derive(cr94a_versionstartdate = toDate(cr94a_versionstartdate),\n\t\tcr94a_versionenddate = toDate(currentUTC())-1,\n\t\tcr94a_customerstartdate = toDate(cr94a_customerstartdate,'YYYY-MM-DD'),\n\t\tcr94a_customerenddate = toDate(cr94a_customerenddate,'YYYY-MM-DD'),\n\t\tcr94a_firstservicedate = toDate(cr94a_firstservicedate,'YYYY-MM-DD')) ~> DeActivateOldVersion\nCDMAccountHistroy, Select1 exists(CDMAccountHistroy@cr94a_sourcenaturalkey == Select1@cr94a_sourcenaturalkey,\n\tnegate:true,\n\tbroadcast: 'auto')~> IdentifyingHistoricalRecords\nIdentifyingHistoricalRecords derive(cr94a_versionstartdate = toDate(cr94a_versionstartdate),\n\t\tcr94a_versionenddate = toDate(cr94a_versionenddate),\n\t\tcr94a_customerstartdate = toDate(cr94a_customerstartdate, 'YYYY-MM-DD'),\n\t\tcr94a_customerenddate = toDate(cr94a_customerenddate, 'YYYY-MM-DD'),\n\t\tcr94a_firstservicedate = toDate(cr94a_firstservicedate,'YYYY-MM-DD')) ~> ConvertToDate\nSelect1, DeActivateOldVersion, ConvertToDate, ConvertToProperDate union(byName: true)~> CombineActiveInactiveRecords\nDerivedColumn1 derive(CDM_RowKey = md5(\r\niif(isNull(cr94a_sourcecustomerid),'',toString(cr94a_sourcecustomerid))+\r\niif(isNull(telephone1),'',toString(telephone1))+\r\niif(isNull(msfsi_riskrating),'',toString(msfsi_riskrating))+\r\niif(isNull(cr94a_customerstartdate),'',toString(cr94a_customerstartdate))+\r\niif(isNull(cr94a_customerenddate),'',toString(cr94a_customerenddate))+\r\niif(isNull(cr94a_firstservicedate),'',toString(cr94a_firstservicedate))+\r\niif(isNull(cr94a_mobilephonenumber),'',toString(cr94a_mobilephonenumber))+\r\niif(isNull(cr94a_naicsindustrycode),'',toString(cr94a_naicsindustrycode))+\r\niif(isNull(cr94a_branchsourcenaturalkey),'',toString(cr94a_branchsourcenaturalkey))+\r\niif(isNull(emailaddress1),'',toString(emailaddress1))+\r\niif(isNull(cr94a_usersourcenaturalkey),'',toString(cr94a_usersourcenaturalkey))+\r\niif(isNull(cr94a_relationshipgroupid),'',toString(cr94a_relationshipgroupid))+\r\niif(isNull(cr94a_relationshipgroupofficername),'',toString(cr94a_relationshipgroupofficername))+\r\niif(isNull(emailaddress2),'',toString(emailaddress2))+\r\niif(isNull(cr94a_solicitableindicator),'',toString(cr94a_solicitableindicator))+\r\niif(isNull(cr94a_solicitablemailcode),'',toString(cr94a_solicitablemailcode))+\r\niif(isNull(cr94a_sourcenaturalkey),'',toString(cr94a_sourcenaturalkey))+\r\niif(isNull(cr94a_taxpayerid),'',toString(cr94a_taxpayerid))+iif(isNull(name),'',toString(name)))) ~> CDMRowKey\nCDMAccountRowKey derive(cr94a_customerstartdate = toDate(cr94a_customerstartdate,'YYYY-MM-DD'),\n\t\tcr94a_customerenddate = toDate(cr94a_customerenddate, 'YYYY-MM-DD'),\n\t\tcr94a_firstservicedate = toDate(cr94a_firstservicedate, 'YYYY-MM-DD')) ~> DerivedColumn1\nExists2 select(mapColumn(\n\t\tcr94a_sourcecustomerid,\n\t\ttelephone1,\n\t\tmsfsi_riskrating,\n\t\tcr94a_customerstartdate,\n\t\tcr94a_customerenddate,\n\t\tcr94a_firstservicedate,\n\t\tcr94a_mobilephonenumber,\n\t\tcr94a_naicsindustrycode,\n\t\tcr94a_branchsourcenaturalkey,\n\t\temailaddress1,\n\t\tcr94a_usersourcenaturalkey,\n\t\tcr94a_relationshipgroupid,\n\t\tcr94a_relationshipgroupofficername,\n\t\temailaddress2,\n\t\tcr94a_solicitableindicator,\n\t\tcr94a_solicitablemailcode,\n\t\tcr94a_sourcenaturalkey,\n\t\tcr94a_taxpayerid,\n\t\tcr94a_versionstartdate,\n\t\tcr94a_versionenddate,\n\t\tname = Name\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nRenameToStdColName derive(Src_RowKey = md5(iif(isNull(cr94a_sourcecustomerid),'',toString(cr94a_sourcecustomerid))+iif(isNull(telephone1),'',toString(telephone1))+iif(isNull(msfsi_riskrating),'',toString(msfsi_riskrating))+iif(isNull(cr94a_customerstartdate),'',toString(cr94a_customerstartdate))+iif(isNull(cr94a_customerenddate),'',toString(cr94a_customerenddate))+iif(isNull(cr94a_firstservicedate),'',toString(cr94a_firstservicedate))+iif(isNull(cr94a_mobilephonenumber),'',toString(cr94a_mobilephonenumber))+iif(isNull(cr94a_naicsindustrycode),'',toString(cr94a_naicsindustrycode))+iif(isNull(cr94a_branchsourcenaturalkey),'',toString(cr94a_branchsourcenaturalkey))+iif(isNull(emailaddress1),'',toString(emailaddress1))+iif(isNull(cr94a_usersourcenaturalkey),'',toString(cr94a_usersourcenaturalkey))+iif(isNull(cr94a_relationshipgroupid),'',toString(cr94a_relationshipgroupid))+iif(isNull(cr94a_relationshipgroupofficername),'',toString(cr94a_relationshipgroupofficername))+iif(isNull(emailaddress2),'',toString(emailaddress2))+iif(isNull(cr94a_solicitableindicator),'',toString(cr94a_solicitableindicator))+iif(isNull(cr94a_solicitablemailcode),'',toString(cr94a_solicitablemailcode))+iif(isNull(cr94a_sourcenaturalkey),'',toString(cr94a_sourcenaturalkey))+iif(isNull(cr94a_taxpayerid),'',toString(cr94a_taxpayerid))+iif(isNull(Name),'',toString(Name)))) ~> DerivedColumn2\nDerivedColumn2, CDMRowKey exists(Src_RowKey == CDM_RowKey,\n\tnegate:true,\n\tbroadcast: 'auto')~> Exists2\nAbsoluteHistoricalRecords derive(cr94a_versionenddate = toDate(cr94a_versionenddate),\n\t\tcr94a_versionstartdate = toDate(cr94a_versionstartdate),\n\t\tcr94a_customerstartdate = toDate(cr94a_customerstartdate),\n\t\tcr94a_customerenddate = toDate(cr94a_customerenddate),\n\t\tcr94a_firstservicedate = toDate(cr94a_firstservicedate)) ~> ConvertToProperDate\nJoinToBranchPrimary, CustomerStartDate join(InvolvedParty@TAX_ID_NUMBER == CustomerStartDate@TAX_ID_NUMBER,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinToGetCustStartDate\nCombineActiveInactiveRecords sink(allowSchemaDrift: false,\n\tvalidateSchema: false,\n\tinput(\n\t\tId as string,\n\t\tSinkCreatedOn as string,\n\t\tSinkModifiedOn as string,\n\t\tstatecode as string,\n\t\tstatuscode as string,\n\t\taddress1_addresstypecode as string,\n\t\tpaymenttermscode as string,\n\t\taddress1_shippingmethodcode as string,\n\t\taccountcategorycode as string,\n\t\taddress1_freighttermscode as string,\n\t\tmsfsi_profittier as string,\n\t\taccountratingcode as string,\n\t\tpreferredappointmenttimecode as string,\n\t\taccountclassificationcode as string,\n\t\tcustomersizecode as string,\n\t\townershipcode as string,\n\t\tpreferredcontactmethodcode as string,\n\t\tindustrycode as string,\n\t\tbusinesstypecode as string,\n\t\tshippingmethodcode as string,\n\t\taddress2_addresstypecode as string,\n\t\taddress2_freighttermscode as string,\n\t\tmsfsi_riskrating as string,\n\t\tcustomertypecode as string,\n\t\taddress2_shippingmethodcode as string,\n\t\tpreferredappointmentdaycode as string,\n\t\tterritorycode as string,\n\t\tdonotpostalmail as string,\n\t\tcreditonhold as string,\n\t\tdonotbulkpostalmail as string,\n\t\tcr94a_solicitableindicator as string,\n\t\tdonotbulkemail as string,\n\t\tdonotfax as string,\n\t\tdonotemail as string,\n\t\tfollowemail as string,\n\t\tparticipatesinworkflow as string,\n\t\tmarketingonly as string,\n\t\tisprivate as string,\n\t\tmerged as string,\n\t\tdonotphone as string,\n\t\tdonotsendmm as string,\n\t\tslaid as string,\n\t\tslaid_entitytype as string,\n\t\tparentaccountid as string,\n\t\tparentaccountid_entitytype as string,\n\t\tmsfsi_enrollmentbranchid as string,\n\t\tmsfsi_enrollmentbranchid_entitytype as string,\n\t\tprimarycontactid as string,\n\t\tprimarycontactid_entitytype as string,\n\t\towningbusinessunit as string,\n\t\towningbusinessunit_entitytype as string,\n\t\tmodifiedby as string,\n\t\tmodifiedby_entitytype as string,\n\t\tmodifiedonbehalfby as string,\n\t\tmodifiedonbehalfby_entitytype as string,\n\t\towningteam as string,\n\t\towningteam_entitytype as string,\n\t\towninguser as string,\n\t\towninguser_entitytype as string,\n\t\tcreatedbyexternalparty as string,\n\t\tcreatedbyexternalparty_entitytype as string,\n\t\tcreatedonbehalfby as string,\n\t\tcreatedonbehalfby_entitytype as string,\n\t\tslainvokedid as string,\n\t\tslainvokedid_entitytype as string,\n\t\ttransactioncurrencyid as string,\n\t\ttransactioncurrencyid_entitytype as string,\n\t\tmodifiedbyexternalparty as string,\n\t\tmodifiedbyexternalparty_entitytype as string,\n\t\tmasterid as string,\n\t\tmasterid_entitytype as string,\n\t\tcreatedby as string,\n\t\tcreatedby_entitytype as string,\n\t\tpreferredsystemuserid as string,\n\t\tpreferredsystemuserid_entitytype as string,\n\t\townerid as string,\n\t\townerid_entitytype as string,\n\t\taging90 as string,\n\t\tmsfsi_banksytdrevenue as string,\n\t\tmsfsi_companysprofitinthelastyear as string,\n\t\taging30 as string,\n\t\tmsfsi_utilizedlimit as string,\n\t\taging60_base as string,\n\t\tcreditlimit as string,\n\t\tmsfsi_implementedlimit_base as string,\n\t\tmsfsi_companyturnoverinthelastyear as string,\n\t\tcreditlimit_base as string,\n\t\tmsfsi_implementedlimit as string,\n\t\tmsfsi_availablelimit_base as string,\n\t\tmsfsi_utilizedlimit_base as string,\n\t\tmsfsi_totaldeposits_base as string,\n\t\tmsfsi_totaldeposits as string,\n\t\taging60 as string,\n\t\trevenue as string,\n\t\tmsfsi_companysprofitinthelastyear_base as string,\n\t\trevenue_base as string,\n\t\tmsfsi_totalpastdue_base as string,\n\t\tmsfsi_banksytdrevenue_base as string,\n\t\taging90_base as string,\n\t\tmsfsi_totalloans_base as string,\n\t\tmarketcap_base as string,\n\t\tmsfsi_totallimit_base as string,\n\t\tmarketcap as string,\n\t\tmsfsi_totallimit as string,\n\t\taging30_base as string,\n\t\tmsfsi_totalloans as string,\n\t\tmsfsi_totalpastdue as string,\n\t\tmsfsi_companyturnoverinthelastyear_base as string,\n\t\tmsfsi_availablelimit as string,\n\t\temailaddress3 as string,\n\t\temailaddress2 as string,\n\t\temailaddress1 as string,\n\t\tmasteraccountidyominame as string,\n\t\taddress1_city as string,\n\t\tmsfsi_utilizedlimit_state as string,\n\t\taddress1_line1 as string,\n\t\tmodifiedon as string,\n\t\taddress1_longitude as string,\n\t\tcreatedbyexternalpartyname as string,\n\t\tentityimage_timestamp as string,\n\t\tsharesoutstanding as string,\n\t\tprimarycontactidname as string,\n\t\ttransactioncurrencyidname as string,\n\t\tmsfsi_limitreviewdate as string,\n\t\tpreferredsystemuseridyominame as string,\n\t\ttelephone1 as string,\n\t\tmsfsi_totalloans_date as string,\n\t\tmsfsi_returnoncapital as string,\n\t\tmasteraccountidname as string,\n\t\tpreferredsystemuseridname as string,\n\t\taddress2_stateorprovince as string,\n\t\taddress1_line2 as string,\n\t\taddress2_line2 as string,\n\t\taddress1_composite as string,\n\t\tcr94a_relationshipgroupofficername as string,\n\t\taddress1_line3 as string,\n\t\tname as string,\n\t\tonholdtime as string,\n\t\taddress2_primarycontactname as string,\n\t\tcr94a_versionenddate as string,\n\t\tmsfsi_availablelimit_state as string,\n\t\taddress1_utcoffset as string,\n\t\taddress2_postofficebox as string,\n\t\tmsfsi_totaldeposits_date as string,\n\t\tnumberofemployees as string,\n\t\tmodifiedbyexternalpartyname as string,\n\t\taddress1_telephone1 as string,\n\t\texchangerate as string,\n\t\taddress2_county as string,\n\t\tftpsiteurl as string,\n\t\taddress2_line1 as string,\n\t\ttelephone3 as string,\n\t\tfax as string,\n\t\taddress2_city as string,\n\t\tmsfsi_dayspastdue as string,\n\t\taddress2_latitude as string,\n\t\tcreatedon as string,\n\t\tparentaccountidname as string,\n\t\ttimespentbymeonemailandmeetings as string,\n\t\ttelephone2 as string,\n\t\tcr94a_mobilephonenumber as string,\n\t\taddress2_postalcode as string,\n\t\tlastusedincampaign as string,\n\t\tprocessid as string,\n\t\towneridyominame as string,\n\t\tentityimage_url as string,\n\t\tmsfsi_availablelimit_date as string,\n\t\taddress2_line3 as string,\n\t\tdescription as string,\n\t\ttimezoneruleversionnumber as string,\n\t\taddress1_county as string,\n\t\tcreatedbyname as string,\n\t\tcr94a_firstservicedate as string,\n\t\taddress2_telephone1 as string,\n\t\taddress2_telephone2 as string,\n\t\taddress2_telephone3 as string,\n\t\tcr94a_naicsindustrycode as string,\n\t\taddress1_addressid as string,\n\t\tcr94a_relationshipgroupid as string,\n\t\ttraversedpath as string,\n\t\tyominame as string,\n\t\tcreatedonbehalfbyname as string,\n\t\twebsiteurl as string,\n\t\taddress2_name as string,\n\t\taddress1_country as string,\n\t\tprimarysatoriid as string,\n\t\towneridtype as string,\n\t\tentityimageid as string,\n\t\tmsfsi_implementedlimit_state as string,\n\t\tprimarytwitterid as string,\n\t\towneridname as string,\n\t\tmodifiedonbehalfbyname as string,\n\t\toverriddencreatedon as string,\n\t\taddress2_composite as string,\n\t\tmsfsi_pastduesince as string,\n\t\tcr94a_dateopened as string,\n\t\taddress1_stateorprovince as string,\n\t\tmsfsi_totaldeposits_state as string,\n\t\tcreatedbyexternalpartyyominame as string,\n\t\tcr94a_solicitablemailcode as string,\n\t\taddress1_telephone2 as string,\n\t\tmsfsi_utilizedlimit_date as string,\n\t\taddress1_postofficebox as string,\n\t\tcreatedonbehalfbyyominame as string,\n\t\tcr94a_petescolumn as string,\n\t\tslainvokedidname as string,\n\t\taddress2_country as string,\n\t\tcr94a_customerid as string,\n\t\tsic as string,\n\t\taddress2_utcoffset as string,\n\t\taccountnumber as string,\n\t\tmsfsi_implementedlimit_date as string,\n\t\taddress2_fax as string,\n\t\taddress2_addressid as string,\n\t\taddress2_longitude as string,\n\t\taddress1_telephone3 as string,\n\t\tmsfsi_totalloans_state as string,\n\t\taddress1_primarycontactname as string,\n\t\tmodifiedbyyominame as string,\n\t\tlastonholdtime as string,\n\t\taddress2_upszone as string,\n\t\tmsfsi_enrollmentbranchidname as string,\n\t\tcr94a_versionstartdate as string,\n\t\taddress1_postalcode as string,\n\t\ttickersymbol as string,\n\t\tstageid as string,\n\t\tutcconversiontimezonecode as string,\n\t\tstockexchange as string,\n\t\tcr94a_sourcenaturalkey as string,\n\t\tmodifiedbyexternalpartyyominame as string,\n\t\timportsequencenumber as string,\n\t\tmsfsi_annualreviewdate as string,\n\t\tversionnumber as string,\n\t\taccountid as string,\n\t\taddress1_name as string,\n\t\taddress1_fax as string,\n\t\taddress1_latitude as string,\n\t\tcr94a_taxpayerid as string,\n\t\tprimarycontactidyominame as string,\n\t\tcr94a_dateclosed as string,\n\t\tmodifiedbyname as string,\n\t\tcreatedbyyominame as string,\n\t\taddress1_upszone as string,\n\t\tmodifiedonbehalfbyyominame as string,\n\t\tslaname as string,\n\t\tparentaccountidyominame as string,\n\t\tcr94a_primarybranchsourcenaturalkey as string,\n\t\tcr94a_primaryemailaddress as string,\n\t\tcr94a_secondarymailaddress as string,\n\t\tcr94a_primaryofficersourcenaturalkey as string,\n\t\tcr94a_secondaryemailaddress as string,\n\t\tcr94a_primarycontactnumber as string,\n\t\tcr94a_customerenddate as string,\n\t\tcr94a_customerstartdate as string,\n\t\tcr94a_branchsourcenaturalkey as string,\n\t\tcr94a_usersourcenaturalkey as string,\n\t\tcr94a_sourcecustomerid as string,\n\t\tcr94a_test as string\n\t),\n\tentity: 'account.cdm.json/account',\n\tformat: 'cdm',\n\tmanifestType: 'manifest',\n\tpartitionPath: 'Account',\n\tfolderPath: 'EDW-CDM/Account',\n\tfileSystem: 'container1',\n\tsubformat: 'parquet',\n\tcorpusPath: 'CDMTableDefinition',\n\tcorpusStore: 'adlsgen2',\n\tadlsgen2_fileSystem: 'container1',\n\ttruncate: false,\n\tpartitionFileNames:['Company.parquet'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tmapColumn(\n\t\tmsfsi_riskrating,\n\t\tcr94a_solicitableindicator,\n\t\temailaddress2,\n\t\temailaddress1,\n\t\ttelephone1,\n\t\tcr94a_relationshipgroupofficername,\n\t\tcr94a_mobilephonenumber,\n\t\tcr94a_naicsindustrycode,\n\t\tcr94a_relationshipgroupid,\n\t\tcr94a_solicitablemailcode,\n\t\tcr94a_sourcenaturalkey,\n\t\tcr94a_taxpayerid,\n\t\tcr94a_branchsourcenaturalkey,\n\t\tcr94a_usersourcenaturalkey,\n\t\tcr94a_sourcecustomerid,\n\t\tcr94a_customerstartdate,\n\t\tcr94a_customerenddate,\n\t\tcr94a_firstservicedate,\n\t\tcr94a_versionstartdate,\n\t\tcr94a_versionenddate,\n\t\tname\n\t),\n\tpartitionBy('hash', 1)) ~> sink1"
		}
	}
}